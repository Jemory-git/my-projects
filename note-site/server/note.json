{"node":[{"type":"folder","folderId":"fo0","folderFather":"node","position":["node[0]"],"foldername":"文件系统","files":[{"type":"folder","folderId":"fo1","folderFather":"fo0","position":["node[0]","files[0]"],"foldername":"url","files":[]},{"filename":"如何选择工作","detail":"<p></p><p></p><p>首先要符合自己的兴趣，是自己喜欢做的喜欢学的。</p><p>然后要能养活自己。</p><p>两个很基础的标准</p><p></p><p></p>","mtime":"02:48","mdate":"2017/11/18","fileId":"f1510344089112","type":"file","fileFather":"fo0","position":["node[0]","files[1]"],"stared":"yes","showBoo":"false"}]},{"filename":"提升价值","detail":"<p>人们想要获得更高的收入，就要能创造更高的价值。那如何提高个人的价值呢：</p><p>1、生产效率提高</p><p>意味着你能在更短的时间做出相同的东西。这对于企业和个人都适用。因为需要的时间更短意味着成本更低，也意味着相同时间的产出更高。所以价值更高。</p><p>2、产品质量提高</p><p>产品不只对于企业来说，个人做的事情都是产品。</p><p>对于生产效率相同的人或企业，想要竞争胜出就需要产品有更高的质量。</p><p>即使生产效率高，但是做出来的东西质量很差，依然比不上那些效率更低但是质量更好的<span style=\"font-size: 1.4rem; text-indent: 2em;\">产品</span><span style=\"font-size: 1.4rem; text-indent: 2em;\">。</span></p><p>3、能够创新</p><p>生产效率和产品质量的比拼是在同一个维度。而创新能使你脱离那个维度，提升一个层次，从竞争上来说能进入一片蓝海。（从生活本质上来说，创新更能改善人们的生存方式比如蜡烛和灯泡。）</p><p>做到这最基础的三点，你的价值一定比别人更高。</p>","mtime":"21:51","mdate":"2018/03/20","fileId":"f1510343196848","type":"file","fileFather":"node","position":["node[1]"],"stared":"yes"},{"filename":"开启防火墙端口","detail":"<p>控制面板-防火墙-高级设置-入站规则-新建规则-然后按流程进行设置即可<br></p><p><br></p><p></p>","ctime":"18:11","cdate":"2018/03/18","fileId":"f1521367867394","type":"file","fileFather":"node","position":["node[2]"],"mtime":"16:46","mdate":"2018/04/04"},{"filename":"ajax上传图片，node接收图片","detail":"https://note.youdao.com/web/#/file/1438837157120725/note/WEB7f5bac50330ab65ad86697da6c6abde0/","ctime":"14:12","cdate":"2018/06/01","fileId":"f1527833542462","type":"file","fileFather":"node","position":["node[3]"],"stared":"yes"},{"filename":"自动刷新浏览器","detail":"http://www.browsersync.cn/","ctime":"16:53","cdate":"2018/07/05","fileId":"f1530780817371","type":"file","fileFather":"node","position":["node[4]"]}],"javascript":[{"filename":"点击事件中绑定事件","detail":"<p>如果多次绑定事件就会出问题，所以在点击事件中绑定事件，需要声明全局变量bindBoo=true，if(bindBoo){</p><p>//绑定事件；bindBoo=false；}，从而实现一次绑定。</p><p>第二种方法：声明全局变量fnCallback，在绑定事件中将回调赋值给fnCallback，然后在全局作用域中绑定事件调用fnCallback；</p>","mtime":"11:51","mdate":"2017/11/18","fileId":"f1510486732707","type":"file","fileFather":"javascript","position":["javascript[0]"],"stared":"yes"},{"filename":"pagex  pagey","detail":"<p>总结一下元素 和事件的相关长款 位置等信息</p><p>原生:</p><p>1、元素的宽高：</p><p>offsetHeight、offsetWidth：元素的外围宽高，包括边框</p><p>clientHeight、clientWidth：元素内容的宽高，（即边框以里，不包括边框）</p><p>scrollHeight、scrollWidth：与clientheight相同</p><p><br></p><p>2、元素的位置</p><p>offsetLeft、offsetTop：元素左上角的坐标，（相对于document左上角）</p><p>offsetParent：元素的第一个定位父元素（relative、absolute、fixed）</p><p><br></p><p>Jquery:</p><p>1、.offset()元素左上角坐标，用于获取和设置<span style=\"font-size: 1.4rem; text-indent: 2em;\">（相对于document左上角）</span></p><p><span style=\"font-size: 1.4rem; text-indent: 2em;\">2、scrollTop()、scrollLeft()，设置元素的滚动距离</span></p><p><span style=\"font-size: 1.4rem; text-indent: 2em;\"><br></span></p><p><span style=\"font-size: 1.4rem; text-indent: 2em;\">鼠标事件的位置：</span></p><p><span style=\"font-size: 1.4rem; text-indent: 2em;\">1、screenX、screenY</span></p><p>鼠标相对于屏幕边缘的位置</p><p>2、clientX、clientY</p><p>鼠标相对于视口边缘的位置</p><p>3、pageX、pageY</p><p>鼠标相对于页面边缘的位置</p>","mtime":"19:27","mdate":"2018/06/11","fileId":"f1510488456624","type":"file","fileFather":"javascript","position":["javascript[1]"]},{"filename":"汉子字符串的长度BUG","detail":"<p>当字符串.length返回的长度不准确时，或者当发生js解释器错误处理大于\\uFFFF的unicode字符时，需要使用Array.from()方法转换字符串为数组在返回length，因为该方法可以正确处理四个字节的unicode字符</p>","ctime":"01:29","cdate":"2017/11/24","fileId":"f1511458179710","type":"file","fileFather":"javascript","position":["javascript[2]"]},{"filename":"function和=>","detail":"<p>=&gt;定义时：</p><p>1、如果没有参数则使用一个空小括号()</p><p>2、如果一个参数可以不写小括号；</p><p>3、如果是多个参数需要用小括号；</p><p>4、没有arguments对象，可以使用rest数组；</p><p>5、箭头函数没有自己的this，this指向定义时所在的作用域对象，而且是固定，不过如果更改该作用域函数的this指向，箭头函数的this指向也会间接变化，如：</p><p>function foo (){</p><p>&nbsp; &nbsp; window.setTimeout(()=&gt;{this.a})；</p><p>}</p><p>foo.call({a:123})；</p><p>计时器执行时的this.a会指向123，而不是window。</p><p>function的this对象是调用时的对象，可以用call、apply、bind方法直接更改指向；</p><p>6、如果代码块只有一行则可以不写大括号{}；</p><p>7、如果返回对象就需要用小括号包起来；</p><p>8、不能使用yeild命令，不能用作generator函数；</p>","ctime":"17:36","cdate":"2017/11/27","fileId":"f1511775405484","type":"file","fileFather":"javascript","position":["javascript[3]"],"mtime":"18:02","mdate":"2017/11/27"},{"filename":"prototype __proto__","detail":"<p>1、arr.__proto__ = Array.prototype;</p><p>2、Array.prototype.__proto__ = Object.prototype;</p><p>3、Object.setPrototypeOf(arr,Array.prototype);</p><p>4、Object.getPrototypeOf(arr) ===&nbsp;<span style=\"font-size: 1.4rem; text-indent: 2em;\">Array.prototype;</span></p><p><br></p><p><br></p><p>标准规定，只有浏览器必须部署__proto__属性，其他运行环境不一定需要部署，因此，从兼容性角度来说不要使用这个属性。而是用</p><p>Object.create(生成操作)、</p><p>Object.<span style=\"font-size: 1.4rem; text-indent: 2em;\">setPrototypeOf(设置原型)、</span></p><p><span style=\"font-size: 1.4rem; text-indent: 2em;\">Object.getPrototypeOf(读取原型)。</span></p>","ctime":"18:03","cdate":"2017/11/28","fileId":"f1511863437674","type":"file","fileFather":"javascript","position":["javascript[4]"],"mtime":"19:41","mdate":"2017/11/28"},{"filename":"复制引用类型","detail":"<p>如果想要复制一个引用类型，如数组和对象，用=运算符是不行的</p><p>对象复制方法：</p><p>1、Object.assign({},obj); //合并对象方法，将想要复制的obj合并入一个空对象</p><p>2、let { ...obj } = obj; //Rest解构赋值，可以把想要复制的obj的属性，拷贝到新声明的obj对象中</p><p>3、let obj = { ...obj }; //...扩展运算符拆分对象，相当于Object.assign( {}, obj )</p><p>4、Object.create(</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Object.getPrototypeOf(obj),</p><p>&nbsp; &nbsp; &nbsp; &nbsp;Object.getOwnPropertyDescriptors(obj)</p><p>)；</p><p>5、JSON.parse(JSON.stringify(obj))</p><p><br></p><p>数组复制方法：</p><p>1、Array.from( arr );&nbsp;</p><p>2、array.map()；</p><p>3、let arr = [ ...arr ];&nbsp;</p><p>4、let [ ...arr ] = arr;</p><p><br></p>","ctime":"18:37","cdate":"2017/11/28","fileId":"f1511865434273","type":"file","fileFather":"javascript","position":["javascript[5]"],"mtime":"16:17","mdate":"2018/03/31","stared":"yes"},{"filename":"Obj 冻结  密封 扩展","detail":"<p>1、冻结</p><p>Object.freeze() 方法可以冻结一个对象，冻结指的是</p><p>不能向这个对象添加新的属性，</p><p>不能修改其已有属性的值，</p><p>不能删除已有属性，</p><p>不能修改该对象已有属性的可枚举性、可配置性、可写性。</p><p>也就是说，这个对象永远是不可变的。该方法返回被冻结的对象。</p><p>判断方法Object.isFrozen()<br></p><p><br></p><p>2、密封</p><p>Object.seal() 方法可以让一个对象密封，并返回被密封后的对象。密封对象将会</p><p>阻止向对象添加新的属性，</p><p>会将所有已有属性的可配置性（configurable）置为不可配置（false），即不可修改属性的描述或删除属性。</p><p>但是可写性描述（writable）为可写（true）的属性的值仍然可以被修改。</p><p>判断方法Object.isSealed()<br></p><p><br></p><p>3、阻止扩展</p><p>Object.preventExtensions()方法让一个对象变的不可扩展，也就是永远不能再添加新的属性。仅阻止添加自身的属性。但属性仍然可以添加到原型。不可扩展对象的属性可能仍然可被删除</p><p>判断方法Object.isExtensible()<br></p>","ctime":"22:02","cdate":"2017/12/27","fileId":"f1514383379731","type":"file","fileFather":"javascript","position":["javascript[6]"],"mtime":"22:05","mdate":"2017/12/27"},{"filename":"原型","detail":"<p>1、所有的引用类型（arr、object、function）都有“__proto__”属性；（除null和Object.prototype）</p><p>2、所有的函数都有“prototype”属性；</p>","ctime":"01:51","cdate":"2018/01/03","fileId":"f1514915469289","type":"file","fileFather":"javascript","position":["javascript[7]"],"mtime":"15:05","mdate":"2018/03/19","stared":"yes"},{"filename":"es6变量声明方式","detail":"<p>1、声明变量的所有方式：var、function、let、const、class、import</p><p>2、代码块作用域对“var”以外的方式生效</p><p>3、let、const不能重复声明已经声明过的变量</p><p>4、const声明的变量不能重新赋值，必须在声明的同时就赋值</p><p>5、let、const声明的变量不会挂载到window或global对象下</p><p>6、变量必须在声明之后才能使用</p>","ctime":"22:42","cdate":"2018/01/08","fileId":"f1515422567318","type":"file","fileFather":"javascript","position":["javascript[8]"],"mtime":"22:57","mdate":"2018/01/08"},{"filename":"es6解构赋值","detail":"<p>1、let ［x，y，...z］= ［1］；</p><p>x //1</p><p>y //undefind</p><p>z //［］</p><p>2、只要具备interator接口，都可以拿来给数组形式的变量进行解构赋值，如：generator函数、具有该接口的Object、set数据结构、map数据结构</p><p>3、可以设置默认值：</p><p>let ［x，y = 3］= ［1］；</p><p>x //1</p><p>y //3</p><p><br></p><p>4、对象的解构赋值：</p><p>let ｛a，b｝= ｛a：1，b：2｝；（简写方式）</p><p>a //1</p><p>b //2</p><p><br></p><p>let ｛a:a, b:b｝=&nbsp;<span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\">｛a：1，b：2｝；（全写方式），即声明的变量是左边对象的属性值，而不是属性名，属性名只是用来匹配查找右边的值，如：</span></p><p>let ｛a:x, b:y｝=&nbsp;<span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\">｛a：1，b：2｝；</span><span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\"><br></span></p><p><span style=\"-webkit-text-size-adjust: 100%;\">x //1</span></p><p><span style=\"-webkit-text-size-adjust: 100%;\">y //2</span></p><p><span style=\"-webkit-text-size-adjust: 100%;\">a //undefined</span></p><p><span style=\"-webkit-text-size-adjust: 100%;\">b //undefined</span></p><p><span style=\"-webkit-text-size-adjust: 100%;\"><br></span></p><p><span style=\"-webkit-text-size-adjust: 100%;\">如果变量先声明，再进行解构赋值则需要包裹小括号，否则大括号开头会被解释为代码块而不是对象：</span></p><p><span style=\"-webkit-text-size-adjust: 100%;\">let a；</span></p><p><span style=\"-webkit-text-size-adjust: 100%;\">({ a } = {a:1});</span></p><p><span style=\"-webkit-text-size-adjust: 100%;\"><br></span></p><p><span style=\"-webkit-text-size-adjust: 100%;\">可以设置默认值：</span></p><p>let ｛a:a=0, b:b=0｝=&nbsp;<span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\">｛a：1｝;</span><span style=\"-webkit-text-size-adjust: 100%;\"><br></span></p><p><span style=\"-webkit-text-size-adjust: 100%;\">a //1</span></p><p><span style=\"-webkit-text-size-adjust: 100%;\">b //0</span></p><p><span style=\"-webkit-text-size-adjust: 100%;\">5、等号右侧会自动将字符串转换为类数组对象，所以字符串可以用来数组解构赋值，它带有的length属性可以用来进行对象解构赋值</span></p>","ctime":"23:00","cdate":"2018/01/08","fileId":"f1515423603937","type":"file","fileFather":"javascript","position":["javascript[9]"],"mtime":"00:12","mdate":"2018/01/09"},{"filename":"es6表示字符的六种方式","detail":"<p><span style=\"-webkit-text-size-adjust: 100%;\">es6的六种字符表示方式：</span></p><p><span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\">1、'/z' === 'z'</span><br></p><p>2、'/172'=== 'z'</p><p>3、'/x7A' === 'z'</p><p>4、'/u007A' ==='z'</p><p>5、'/u{007A}' ==='z'或'/u{7A}' === 'z'</p><p>6、'z' === 'z'</p><div><br></div>","ctime":"23:36","cdate":"2018/01/09","fileId":"f1515512219659","type":"file","fileFather":"javascript","position":["javascript[10]"],"mtime":"00:45","mdate":"2018/01/10"},{"filename":"跨域请求","detail":"<p>ajax请求地址与当前页面的地址相比，协议、域名、端口有一个不同就算跨域。浏览器基于安全考虑和“同源策略”会阻止跨域请求</p><p>1、html标签可以跨域img、script、link</p><p>2、对于前端来说，通过jsonp实现跨域请求。即通过script标签请求js文件，请求地址由后端提供（或者数据提供方提供），前后端商定数据的传输形式</p><p>3、对于后端来说通过设置响应header告诉浏览器，可以接受哪些站点的跨域请求（或者设置接受所有站点的跨域请求）</p>","ctime":"05:37","cdate":"2018/01/10","fileId":"f1515533870562","type":"file","fileFather":"javascript","position":["javascript[11]"],"mtime":"06:05","mdate":"2018/01/10"},{"filename":"es6正则表达式","detail":"<p>•u修饰符，用于识别大于\\uFFFF的字符</p><p>•y修饰符，全局匹配的同时，匹配到的结果的第一个位置必须和本次匹配的起始位置相同</p><p>•与y修饰符对应，regexp实例增加了sticky属性，用来判断是否设置了y修饰符</p><p>•regexp实例新增flags属性，返回设置的所有修饰符</p><p>•先行断言?=，先行否断言?!（前瞻）比如：b<span style=\"font-size: 1.4rem; text-indent: 2em;\">(?=a)</span><span style=\"font-size: 1.4rem; text-indent: 2em;\">表示匹配b，但是后面必须有a</span></p><p>•后行断言?&lt;=，后行否断言?&lt;!（后顾）比如：(?&lt;=a)b表示匹配b，但是前面必须有a</p><p><br></p><p>获取捕获分组：</p><p>1、regexp.exec(str)方法返回的数组中含有分组内容</p><p>2、string.replace(regexp,$1)方法中可以直接使用$1获取分组</p><p>3、在任意正则方法执行过后，如regexp.test、<span style=\"font-size: 1.4rem; text-indent: 2em;\">regexp.</span><span style=\"font-size: 1.4rem; text-indent: 2em;\">exec、或str.match、str.search、str.replace、str.split等。使用构造函数RegExp.$1可以获取分组内容</span></p><p><span style=\"font-size: 1.4rem; text-indent: 2em;\">4、分组不捕获：括号开头位置加入“</span><span style=\"font-size: 1.4rem; text-indent: 2em;\">?:</span><span style=\"font-size: 1.4rem; text-indent: 2em;\">”。示例：(?:xxx)</span></p>","ctime":"00:05","cdate":"2018/01/13","fileId":"f1515773146232","type":"file","fileFather":"javascript","position":["javascript[12]"],"mtime":"13:54","mdate":"2018/05/30"},{"filename":"es6数值","detail":"<p>1、二进制数表示方式：0B或0b开头</p><div>2、八进制数表示方式：0B或0b开头</div><div>3、十六进制表示方式：0x或0X开头</div><div>4、以上数字形式通过Number()方法转换成10进制</div><div>5、新增Number.isFinite()和Number.isNa<span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\">N()，这两个方法不会对参数进行类型转换。全局下的这两个方法会转换</span></div><div><span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\">6、parseInt()方法移动到Number函数下，类似这样的转变的目的是逐步减少全局方法，使越来越模块化</span></div><div><span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\">7、新增Number.isInteger()判断参数是否是整数</span></div><div><span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\">8、由于浮点数计算的不精确性，es6设置了一个最小误差值Number.EPSILON，如果计算误差小于此值就认为结果是精确的</span></div><div><span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\">9、js能够准确表示的整数范围在正负2的53次方之间，es6新增Number.isSafeInteger()方法判断一个数是否在这个区间</span></div><div><span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\">10、es7新增指数运算符**，2 ** 3 === 8//true，let &nbsp;a = 2; a **=3; //a === 8</span></div><p></p>","ctime":"00:08","cdate":"2018/01/13","fileId":"f1515773294978","type":"file","fileFather":"javascript","position":["javascript[13]"],"mtime":"00:41","mdate":"2018/01/13"},{"filename":"ajax请求流程","detail":"<p>1、新建XMLHttpRequest对象：new&nbsp;XMLHttpRequest();</p><p>2、监听onreadystatechange事件，当readystate=4,status=200,说明请求成功，收到响应，回调函数里对数据进行处理</p><p>3、往哪儿发？调用open(method，url，true)方法，参数传入请求方式和请求地址</p><p>4、设置请求头：setRequestHeader(headerName, header);</p><p>5、结束：调用send()方法发送请求。如果是post请求可以在参数传入数据。</p>","ctime":"14:55","cdate":"2018/03/19","fileId":"f1521442538074","type":"file","fileFather":"javascript","position":["javascript[14]"]},{"filename":"强制类型转换场景","detail":"<p>1、if语句</p><p>2、字符串拼接</p><p>3、==双等运算符</p><p>4、与或非运算符 &amp;&amp; || &nbsp;！</p><p><br></p>","ctime":"14:21","cdate":"2018/03/28","fileId":"f1522218086079","type":"file","fileFather":"javascript","position":["javascript[15]"]},{"filename":"子类和父类的继承","detail":"<p>let arr =new Array();</p><p>arr instanceof Array; //true</p><p>arr instanceof Object; //true</p><p>arr instanceof Function; //false</p><p>Array instanceof Object; //true</p><p>Array instanceof Function; //true</p><p>Object instanceof Function; //true</p>","ctime":"10:22","cdate":"2018/03/29","fileId":"f1522290156137","type":"file","fileFather":"javascript","position":["javascript[16]"],"mtime":"10:23","mdate":"2018/03/29","stared":"yes"},{"filename":"命名规范","detail":"<p>1、大些开头代表类或构造函数：Array、Object、Function</p><p>2、“_”开头代表私有变量，不给别人用</p>","ctime":"15:19","cdate":"2018/03/31","fileId":"f1522480751027","type":"file","fileFather":"javascript","position":["javascript[17]"]},{"filename":"闭包使用场景","detail":"<p>1、函数中定义私有变量，return出去使用这个变量的函数，这个私有变量只能在当前函数作用域里修改，在外面改不了</p><p>2、将函数传递到另一个函数里执行：比如http.createServer(function(){});</p>","ctime":"15:28","cdate":"2018/03/31","fileId":"f1522481292946","type":"file","fileFather":"javascript","position":["javascript[18]"],"mtime":"15:34","mdate":"2018/03/31"},{"filename":"需要异步的场景","detail":"<div>耗时比较长的操作都需要异步执行，防止阻塞</div>1、定时器<div>2、事件</div><div>3、ajax请求</div><div>4、读取硬盘、网络请求等io操作</div><div><p><br></p></div>","ctime":"15:49","cdate":"2018/03/31","fileId":"f1522482583699","type":"file","fileFather":"javascript","position":["javascript[19]"]},{"filename":"支持正则参数的方法","detail":"<p>1、regexp.exec( )</p><p>2、regexp.test( )</p><p>3、string.search( )</p><p>4、string.match( )</p><p>5、string.replace( )</p><p>6、string.split( )</p><p><br></p><p>量词至少n个：{n，}</p><p>比如{1，}相当于量词“+”</p>","ctime":"19:53","cdate":"2018/03/31","fileId":"f1522497197906","type":"file","fileFather":"javascript","position":["javascript[20]"],"mtime":"19:55","mdate":"2018/03/31"},{"filename":"CSRF跨站攻击","detail":"<p>CSRF攻击攻击原理及过程如下：</p><p>&nbsp; &nbsp; &nbsp; &nbsp;1. 用户C打开浏览器，访问受信任网站A，输入用户名和密码请求登录网站A；</p><p>&nbsp; &nbsp; &nbsp; &nbsp;2.在用户信息通过验证后，网站A产生Cookie信息并返回给浏览器，此时用户登录网站A成功，可以正常发送请求到网站A；</p><p>&nbsp; &nbsp; &nbsp; &nbsp;3. 用户未退出网站A之前，在同一浏览器中，打开一个TAB页访问网站B；</p><p>&nbsp; &nbsp; &nbsp; &nbsp;4. 网站B接收到用户请求后，返回一些攻击性代码，并发出一个请求要求访问第三方站点A；</p><p>&nbsp; &nbsp; &nbsp; &nbsp;5. 浏览器在接收到这些攻击性代码后，根据网站B的请求，在用户不知情的情况下携带Cookie信息，向网站A发出请求。网站A并不知道该请求其实是由B发起的，所以会根据用户C的Cookie信息以C的权限处理该请求，导致来自网站B的恶意代码被执行。&nbsp;</p><p><br></p><p>应对方式：多重验证，短信、密码等组合使用</p>","ctime":"20:35","cdate":"2018/03/31","fileId":"f1522499705031","type":"file","fileFather":"javascript","position":["javascript[21]"],"mtime":"16:19","mdate":"2018/04/02"},{"filename":"跨域请求","detail":"<p>1、浏览器默认不允许ajax请求跨域的内容；</p><p>2、server端可通过设置响应头，来允许指定的url的跨域请求；</p><p>3、三个html标签可以跨域请求内容，img、link、script；</p><p>4、用script标签去请求一个跨域的js内容被称作JSONP，这个js内容会携带想要得到的数据信息，把这个数据信息赋值给window下的变量，就能使用了。Jsonp的跨域请求方式不用在server设置允许跨域的响应头。</p>","ctime":"14:53","cdate":"2018/04/01","fileId":"f1522565625788","type":"file","fileFather":"javascript","position":["javascript[22]"],"mtime":"15:42","mdate":"2018/04/01"},{"filename":"前端存储","detail":"<p>1、HTML5之前人们都用document.cookie='someString'的方式存储信息。但是cookie是设计用来客户端和server通信用的，相同域下的每次请求都会携带，容量限制4KB。</p><p>2、HTML5提出专门的存储标准，window.localStorage和window.sessionStorage对象，最大容量5M。调用.setItem( )和.getItem( )方法来存储和获取信息，调用.removeItem( )删除存储的信息</p>","ctime":"16:07","cdate":"2018/04/01","fileId":"f1522570072980","type":"file","fileFather":"javascript","position":["javascript[23]"]},{"filename":"模块化规范","detail":"<p>模块化重点解决</p><p>1、全局变量冲突的问题；</p><p>2、模块之间复杂的依赖关系导致很难确定html页面的&lt;script&gt;标签加载顺序问题</p><p>3、提高开发和维护的效率，不同的功能在不同的文件内，易于查找和更改，比较而言，开发过程中代码都在同一个js文件内会非常混乱，不利于查找bug。</p><p><br></p><p>1、CommonJS规范，用于开发环境，模块同步加载，然后缓存起来：</p><p>const name = require(\"模块路径\")；</p><p>module.export = 模块接口</p><p>2、AMD规范，用于浏览器环境，模块为需要时异步加载，没有用到的模块就不加载，不会阻塞浏览器，模块都加载完成后才会执行回调函数：</p><p>define([\"模块路径\"]，function(name){</p><p>&nbsp; &nbsp; //some code</p><p>&nbsp; &nbsp; return {</p><p>&nbsp; &nbsp; &nbsp; &nbsp;//模块接口<br></p><p>&nbsp; &nbsp; }</p><p>})；name和模块路径为顺序对应关系。</p><p><br></p><p>require(<span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\">[\"模块路径\"]，function(name){</span></p><p><span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\">&nbsp; &nbsp;//some code</span></p><p><span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\">})；</span><span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\">name和模块路径为顺序对应关系。</span></p><p><span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\">3、ES6模块是在编译时输出接口，输出的是对模块值的引用；比较而言，CommonJS模块是在执行时输出，并会缓存起来，输出的是值的拷贝。</span></p><p><span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\">ES6模块是具有‘静态优化’的功能的，</span></p><p><br></p>","ctime":"17:18","cdate":"2018/04/01","fileId":"f1522574316722","type":"file","fileFather":"javascript","position":["javascript[24]"],"mtime":"13:17","mdate":"2018/04/03","stared":"yes"},{"filename":"hasClass+addClass+removeClass","detail":"<p>function hasClass(obj, cls) {&nbsp;</p><p>&nbsp;return obj.className.match(new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)'));&nbsp;</p><p>}&nbsp;</p><p>&nbsp;</p><p>function addClass(obj, cls) {&nbsp;</p><p>&nbsp;if (!this.hasClass(obj, cls)) obj.className += \" \" + cls;&nbsp;</p><p>}&nbsp;</p><p>&nbsp;</p><p>function removeClass(obj, cls) {&nbsp;</p><p>&nbsp;if (hasClass(obj, cls)) {&nbsp;</p><p>&nbsp;var reg = new RegExp('(\\\\s|^)' + cls + '(\\\\s|$)');&nbsp;</p><p>&nbsp;obj.className = obj.className.replace(reg, ' ');&nbsp;</p><p>&nbsp;}&nbsp;</p><p>}&nbsp;</p><p>&nbsp;</p><p>function toggleClass(obj,cls){&nbsp;</p><p>&nbsp;if(hasClass(obj,cls)){&nbsp;</p><p>&nbsp;removeClass(obj, cls);&nbsp;</p><p>&nbsp;}else{&nbsp;</p><p>&nbsp;addClass(obj, cls);&nbsp;</p><p>&nbsp;}&nbsp;</p><p>}</p>","ctime":"10:35","cdate":"2018/04/19","fileId":"f1524105312600","type":"file","fileFather":"javascript","position":["javascript[25]"]},{"filename":"火狐的滚轮事件","detail":"<p>火狐浏览器的滚轮事件有点特别，是DOMMouseScroll；</p><p>如果在vue中绑定滚轮事件，方式为@wheel<br></p><p>判断滚动方向ff是e.deltaY的正负，其他浏览器为e.wheelDelta的正负</p>","ctime":"17:11","cdate":"2018/04/19","fileId":"f1524129073798","type":"file","fileFather":"javascript","position":["javascript[26]"],"mtime":"17:22","mdate":"2018/04/19"},{"filename":"原生scroll的ie兼容性","detail":"<p>如果正在使用相对滚动函数，如 window.scrollBy、window.scrollByLines 或 window.scrollByPages，则需要使用该属性来检测文档是否已被滚动了某段距离。</p><p><br></p><p>pageYOffset 属性是 scrollY 属性的别名：</p><p>window.pageYOffset == window.scrollY; // 总是返回 true</p><p><br></p><p>为了跨浏览器兼容，请使用 window.pageYOffset 代替 window.scrollY。另外，旧版本IE（&lt;9）两个属性都不支持，必须使用其他的非标准属性。完整的兼容性代码如下：</p><div><div>var supportPageOffset = window.pageXOffset !== undefined;</div><div>var isCSS1Compat = ((document.compatMode || \"\") === \"CSS1Compat\");</div><div><br></div><div>var x = supportPageOffset ? window.pageXOffset : isCSS1Compat ? document.documentElement.scrollLeft : document.body.scrollLeft;</div><div>var y = supportPageOffset ? window.pageYOffset : isCSS1Compat ? document.documentElement.scrollTop : document.body.scrollTop;</div></div>","ctime":"18:11","cdate":"2018/04/19","fileId":"f1524132693109","type":"file","fileFather":"javascript","position":["javascript[27]"]},{"filename":"for循环中let的特性","detail":"<p style=\"text-indent: 0px;\"><font color=\"#333333\" face=\"Verdana, Arial\"><span style=\"font-size: 15.36px;\">如果使用let，声明的变量仅在块级作用域内有效，最后输出的是 6。</span></font><br></p><pre class=\" language-javascript\" style=\"overflow: auto; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; direction: ltr; word-break: normal; tab-size: 4; hyphens: none; padding: 10px 1em 10px 0.7rem; margin: 0.5em auto; border-radius: 5px; background: rgb(17, 17, 17); line-height: 1.2; text-indent: 0px;\"><code class=\" language-javascript\" style=\"text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; direction: ltr; word-break: normal; tab-size: 4; hyphens: none; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 2px;\"><span class=\"token keyword\" style=\"color: rgb(102, 217, 239); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">var</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> a </span></font><span class=\"token operator\" style=\"color: rgb(249, 38, 114); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">=</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> </span></font><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">[</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">]</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">;</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\">\n</span></font><span class=\"token keyword\" style=\"color: rgb(102, 217, 239); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">for</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> </span></font><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">(</span><span class=\"token keyword\" style=\"color: rgb(102, 217, 239); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">let</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> i </span></font><span class=\"token operator\" style=\"color: rgb(249, 38, 114); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">=</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> </span></font><span class=\"token number\" style=\"color: rgb(174, 129, 255); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">0</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">;</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> i </span></font><span class=\"token operator\" style=\"color: rgb(249, 38, 114); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">&lt;</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> </span></font><span class=\"token number\" style=\"color: rgb(174, 129, 255); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">10</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">;</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> i</span></font><span class=\"token operator\" style=\"color: rgb(249, 38, 114); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">++</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">)</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> </span></font><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">{</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\">\n  a</span></font><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">[</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\">i</span></font><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">]</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> </span></font><span class=\"token operator\" style=\"color: rgb(249, 38, 114); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">=</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> </span></font><span class=\"token keyword\" style=\"color: rgb(102, 217, 239); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">function</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> </span></font><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">(</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">)</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> </span></font><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">{</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\">\n    console</span></font><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">.</span><span class=\"token function\" style=\"color: rgb(166, 226, 46); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">log<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">(</span></span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\">i</span></font><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">)</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">;</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\">\n  </span></font><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">}</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">;</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\">\n</span></font><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">}</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\">\na</span></font><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">[</span><span class=\"token number\" style=\"color: rgb(174, 129, 255); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">6</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">]</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">(</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">)</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">;</span><span class=\"token comment\" spellcheck=\"true\" style=\"color: rgb(117, 113, 94); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\"> // 6</span><span class=\"token comment\" spellcheck=\"true\" style=\"font-size: 15.36px; white-space: normal;\"><font color=\"#333333\" face=\"Verdana, Arial\">\n</font></span></code></pre><p style=\"text-indent: 0px;\"><font color=\"#333333\" face=\"Verdana, Arial\"><span style=\"font-size: 15.36px;\">上面代码中，变量i是let声明的，当前的i只在本轮循环有效，所以每一次循环的i其实都是一个新的变量，所以最后输出的是6。你可能会问，如果每一轮循环的变量i都是重新声明的，那它怎么知道上一轮循环的值，从而计算出本轮循环的值？这是因为 JavaScript 引擎内部会记住上一轮循环的值，初始化本轮的变量i时，就在上一轮循环的基础上进行计算。</span></font></p><p style=\"text-indent: 0px;\"><font color=\"#333333\" face=\"Verdana, Arial\"><span style=\"font-size: 15.36px;\"><br></span></font></p><p style=\"text-indent: 0px;\"><font color=\"#333333\" face=\"Verdana, Arial\"><span style=\"font-size: 15.36px;\">另外，for循环还有一个特别之处，就是设置循环变量的那部分是一个父作用域，而循环体内部是一个单独的子作用域。</span></font></p><pre class=\" language-javascript\" style=\"overflow: auto; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; direction: ltr; word-break: normal; tab-size: 4; hyphens: none; padding: 10px 1em 10px 0.7rem; margin: 0.5em auto; border-radius: 5px; background: rgb(17, 17, 17); line-height: 1.2; text-indent: 0px;\"><code class=\" language-javascript\" style=\"text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; direction: ltr; word-break: normal; tab-size: 4; hyphens: none; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 2px;\"><span class=\"token keyword\" style=\"color: rgb(102, 217, 239); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">for</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> </span></font><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">(</span><span class=\"token keyword\" style=\"color: rgb(102, 217, 239); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">let</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> i </span></font><span class=\"token operator\" style=\"color: rgb(249, 38, 114); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">=</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> </span></font><span class=\"token number\" style=\"color: rgb(174, 129, 255); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">0</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">;</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> i </span></font><span class=\"token operator\" style=\"color: rgb(249, 38, 114); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">&lt;</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> </span></font><span class=\"token number\" style=\"color: rgb(174, 129, 255); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">3</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">;</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> i</span></font><span class=\"token operator\" style=\"color: rgb(249, 38, 114); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">++</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">)</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> </span></font><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">{</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\">\n  </span></font><span class=\"token keyword\" style=\"color: rgb(102, 217, 239); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">let</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> i </span></font><span class=\"token operator\" style=\"color: rgb(249, 38, 114); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">=</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\"> </span></font><span class=\"token string\" style=\"color: rgb(166, 226, 46); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">'abc'</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">;</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\">\n  console</span></font><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">.</span><span class=\"token function\" style=\"color: rgb(166, 226, 46); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">log<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">(</span></span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\">i</span></font><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">)</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">;</span><font color=\"#a6e22e\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 0.7rem; word-spacing: normal;\">\n</span></font><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">}</span><span class=\"token comment\" spellcheck=\"true\" style=\"color: rgb(117, 113, 94); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">\n// abc\n</span><span class=\"token comment\" spellcheck=\"true\" style=\"color: rgb(117, 113, 94); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">// abc\n</span><span class=\"token comment\" spellcheck=\"true\" style=\"color: rgb(117, 113, 94); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">// abc</span><span class=\"token comment\" spellcheck=\"true\" style=\"font-size: 15.36px; white-space: normal;\"><font color=\"#333333\" face=\"Verdana, Arial\">\n</font></span></code></pre><p style=\"text-indent: 0px;\"><font color=\"#333333\" face=\"Verdana, Arial\"><span style=\"font-size: 15.36px;\">上面代码正确运行，输出了 3 次abc。这表明函数内部的变量i与循环变量i不在同一个作用域，有各自单独的作用域。</span></font><br></p>","ctime":"15:45","cdate":"2018/04/20","fileId":"f1524210342147","type":"file","fileFather":"javascript","position":["javascript[28]"],"mtime":"15:46","mdate":"2018/04/20"},{"filename":"TDZ‘暂时性死区’","detail":"<p>一个变量使用的时候，如果当前作用域内存在let或const声明的同名变量，那这个变量就必须先声明在使用，即使父作用域也声明了同名变量，js也会锁定当前作用于内取值。</p><pre class=\" language-javascript\" style=\"overflow: auto; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, monospace; font-size: 15.36px; color: rgb(255, 255, 255); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; direction: ltr; word-break: normal; tab-size: 4; hyphens: none; padding: 10px 1em 10px 0.7rem; margin: 0.5em auto; border-radius: 5px; background: rgb(17, 17, 17); line-height: 1.2; text-indent: 0px;\"><code class=\" language-javascript\" style=\"font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; color: rgb(166, 226, 46); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; tab-size: 4; hyphens: none; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 2px;\"><span class=\"token keyword\" style=\"color: rgb(102, 217, 239);\">var</span> tmp <span class=\"token operator\" style=\"color: rgb(249, 38, 114);\">=</span> <span class=\"token number\" style=\"color: rgb(174, 129, 255);\">123</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">;</span>\n\n<span class=\"token keyword\" style=\"color: rgb(102, 217, 239);\">if</span> <span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">(</span><span class=\"token boolean\" style=\"color: rgb(174, 129, 255);\">true</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">)</span> <span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">{</span>\n  tmp <span class=\"token operator\" style=\"color: rgb(249, 38, 114);\">=</span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">;</span><span class=\"token comment\" spellcheck=\"true\" style=\"color: rgb(117, 113, 94);\"> // ReferenceError\n</span>  <span class=\"token keyword\" style=\"color: rgb(102, 217, 239);\">let</span> tmp<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">;</span>\n<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">}</span></code></pre><pre class=\" language-javascript\" style=\"overflow: auto; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; direction: ltr; word-break: normal; tab-size: 4; hyphens: none; padding: 10px 1em 10px 0.7rem; margin: 0.5em auto; border-radius: 5px; background: rgb(17, 17, 17); line-height: 1.2; text-indent: 0px;\"><code class=\" language-javascript\" style=\"text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; direction: ltr; word-break: normal; tab-size: 4; hyphens: none; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 2px;\"><span class=\"token punctuation\" style=\"\"><font color=\"#f8f8f2\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 7px;\">有些“死区”比较隐蔽，不太容易发现。\n\nfunction bar(x = y, y = 2) {\n  return [x, y];\n}\n\nbar(); // 报错</span><span style=\"font-size: 0.7rem; word-spacing: normal;\"><br></span></font></span></code></pre><pre class=\" language-javascript\" style=\"overflow: auto; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; direction: ltr; word-break: normal; tab-size: 4; hyphens: none; padding: 10px 1em 10px 0.7rem; margin: 0.5em auto; border-radius: 5px; background: rgb(17, 17, 17); line-height: 1.2; text-indent: 0px;\"><font color=\"#f8f8f2\" face=\"Consolas, Courier New, Courier, FreeMono, monospace\"><span style=\"font-size: 7px;\">let 和 const不能重复声明：</span></font>不能在函数内部重新声明参数。</pre><pre class=\" language-javascript\" style=\"overflow: auto; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, monospace; font-size: 15.36px; color: rgb(255, 255, 255); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; direction: ltr; word-break: normal; tab-size: 4; hyphens: none; padding: 10px 1em 10px 0.7rem; margin: 0.5em auto; border-radius: 5px; background: rgb(17, 17, 17); line-height: 1.2; text-indent: 0px;\"><code class=\" language-javascript\" style=\"font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; color: rgb(166, 226, 46); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; tab-size: 4; hyphens: none; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 2px;\"><span class=\"token keyword\" style=\"color: rgb(102, 217, 239);\">function</span> <span class=\"token function\">func<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">(</span></span>arg<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">)</span> <span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">{</span>\n  <span class=\"token keyword\" style=\"color: rgb(102, 217, 239);\">let</span> arg<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">;</span><span class=\"token comment\" spellcheck=\"true\" style=\"color: rgb(117, 113, 94);\"> // 报错\n</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">}</span>\n\n<span class=\"token keyword\" style=\"color: rgb(102, 217, 239);\">function</span> <span class=\"token function\">func<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">(</span></span>arg<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">)</span> <span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">{</span>\n  <span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">{</span>\n    <span class=\"token keyword\" style=\"color: rgb(102, 217, 239);\">let</span> arg<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">;</span><span class=\"token comment\" spellcheck=\"true\" style=\"color: rgb(117, 113, 94);\"> // 不报错\n</span>  <span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">}</span>\n<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">}</span></code></pre><p style=\"color: rgb(51, 51, 51); font-family: Verdana, Arial; font-size: 15.36px; text-indent: 0px;\">ES5 只有全局作用域和函数作用域，没有块级作用域，这带来很多不合理的场景。</p><p style=\"color: rgb(51, 51, 51); font-family: Verdana, Arial; font-size: 15.36px; text-indent: 0px;\">第一种场景，内层变量可能会覆盖外层变量。</p><pre class=\" language-javascript\" style=\"overflow: auto; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, monospace; font-size: 15.36px; color: rgb(255, 255, 255); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; direction: ltr; word-break: normal; tab-size: 4; hyphens: none; padding: 10px 1em 10px 0.7rem; margin: 0.5em auto; border-radius: 5px; background: rgb(17, 17, 17); line-height: 1.2; text-indent: 0px;\"><code class=\" language-javascript\" style=\"font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; color: rgb(166, 226, 46); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; tab-size: 4; hyphens: none; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 2px;\"><span class=\"token keyword\" style=\"color: rgb(102, 217, 239);\">var</span> tmp <span class=\"token operator\" style=\"color: rgb(249, 38, 114);\">=</span> <span class=\"token keyword\" style=\"color: rgb(102, 217, 239);\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">(</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">)</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">;</span>\n\n<span class=\"token keyword\" style=\"color: rgb(102, 217, 239);\">function</span> <span class=\"token function\">f<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">(</span></span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">)</span> <span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">{</span>\n  console<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">.</span><span class=\"token function\">log<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">(</span></span>tmp<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">)</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">;</span>\n  <span class=\"token keyword\" style=\"color: rgb(102, 217, 239);\">if</span> <span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">(</span><span class=\"token boolean\" style=\"color: rgb(174, 129, 255);\">false</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">)</span> <span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">{</span>\n    <span class=\"token keyword\" style=\"color: rgb(102, 217, 239);\">var</span> tmp <span class=\"token operator\" style=\"color: rgb(249, 38, 114);\">=</span> <span class=\"token string\">'hello world'</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">;</span>\n  <span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">}</span>\n<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">}</span>\n\n<span class=\"token function\">f<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">(</span></span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">)</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">;</span><span class=\"token comment\" spellcheck=\"true\" style=\"color: rgb(117, 113, 94);\"> // undefined</span></code>function<span style=\"color: rgb(166, 226, 46); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\"> </span><span class=\"token function\" style=\"color: rgb(166, 226, 46); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\">f1<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">(</span></span><span class=\"token punctuation\" style=\"font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal; color: rgb(248, 248, 242);\">)</span><span style=\"color: rgb(166, 226, 46); font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal;\"> </span><span class=\"token punctuation\" style=\"font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; word-spacing: normal; color: rgb(248, 248, 242);\">{</span></pre><pre class=\" language-javascript\" style=\"overflow: auto; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, monospace; font-size: 15.36px; color: rgb(255, 255, 255); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; direction: ltr; word-break: normal; tab-size: 4; hyphens: none; padding: 10px 1em 10px 0.7rem; margin: 0.5em auto; border-radius: 5px; background: rgb(17, 17, 17); line-height: 1.2; text-indent: 0px;\"><code class=\" language-javascript\" style=\"font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; color: rgb(166, 226, 46); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; tab-size: 4; hyphens: none; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 2px;\">  <span class=\"token keyword\" style=\"color: rgb(102, 217, 239);\">let</span> n <span class=\"token operator\" style=\"color: rgb(249, 38, 114);\">=</span> <span class=\"token number\" style=\"color: rgb(174, 129, 255);\">5</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">;</span>\n  <span class=\"token keyword\" style=\"color: rgb(102, 217, 239);\">if</span> <span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">(</span><span class=\"token boolean\" style=\"color: rgb(174, 129, 255);\">true</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">)</span> <span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">{</span>\n    <span class=\"token keyword\" style=\"color: rgb(102, 217, 239);\">let</span> n <span class=\"token operator\" style=\"color: rgb(249, 38, 114);\">=</span> <span class=\"token number\" style=\"color: rgb(174, 129, 255);\">10</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">;</span>\n  <span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">}</span>\n  console<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">.</span><span class=\"token function\">log<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">(</span></span>n<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">)</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">;</span><span class=\"token comment\" spellcheck=\"true\" style=\"color: rgb(117, 113, 94);\"> // 5\n</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">}</span></code></pre>","ctime":"15:56","cdate":"2018/04/20","fileId":"f1524211001767","type":"file","fileFather":"javascript","position":["javascript[29]"],"mtime":"16:16","mdate":"2018/04/20"},{"filename":"窗口滚动高度兼容性","detail":"<p>浏览器滚动兼容性问题主要出在火狐浏览器中：</p><p>window.scrollY || window.pageYOffset;<br></p>","ctime":"12:39","cdate":"2018/04/28","fileId":"f1524890361792","type":"file","fileFather":"javascript","position":["javascript[30]"]},{"filename":"跨域携带cookie","detail":"<p>https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest/withCredentials<br></p><p>XMLHttpRequest.withCredentials&nbsp; 属性是一个Boolean类型</p><p>默认情况下，跨源请求不提供凭据(cookie、HTTP认证及客户端SSL证明等)。通过将withCredentials属性设置为true，可以指定某个请求应该发送凭据。如果服务器接收带凭据的请求，会用下面的HTTP头部来响应。</p><p>Access-Control-Allow-Credentials: true。</p><p>如果发送的是带凭据的请求，但服务器的相应中没有包含这个头部，那么浏览器就不会把相应交给JavaScript(于是，responseText中将是空字符串，status的值为0，而且会调用onerror()事件处理程序)。另外，服务器还可以在Preflight响应中发送这个HTTP头部，表示允许源发送带凭据的请求。</p><p>1、$.ajax()方法中设置证书。如果在beforeSend配置项中设置xhr.withCredentials = true;会不生效。</p><p><span style=\"text-indent: 2em;\">xhrFields: {</span></p><p>&nbsp; &nbsp; &nbsp; &nbsp; withCredentials: true</p><p>&nbsp; &nbsp; },</p><p><br></p><p>axios中配置<span style=\"font-size: 1.4rem; text-indent: 2em;\">&nbsp;</span><span style=\"font-size: 1.4rem; text-indent: 2em;\">withCredentials: true</span></p><p><br></p><p>2、服务端必须同时设置Access-Control-Allow-Credentials： true;</p><p>3、服务端Access-Control-Allow-Origin不可以为 '*'，需要指明具体地址</p>","ctime":"18:42","cdate":"2018/05/11","fileId":"f1526035327678","type":"file","fileFather":"javascript","position":["javascript[31]"],"mtime":"14:36","mdate":"2018/07/13"},{"filename":"ajax的预检请求","detail":"<p>当请求满足下述任一条件时，即应首先发送预检请求：<br></p><p>1、使用了下面任一 HTTP 方法：</p><p>PUT</p><p>DELETE</p><p>CONNECT</p><p>OPTIONS</p><p>TRACE</p><p>PATCH</p><p>2、人为设置了对 CORS 安全的首部字段集合之外的其他首部字段。该集合为：</p><p>Accept</p><p>Accept-Language</p><p>Content-Language</p><p>Content-Type (but note the additional requirements below)</p><p>DPR</p><p>Downlink</p><p>Save-Data</p><p>Viewport-Width</p><p>Width</p><p><span style=\"font-size: 1.4rem; text-indent: 2em;\">3、Content-Type 的值不属于下列之一:</span></p><p>application/x-www-form-urlencoded</p><p>multipart/form-data</p><p>text/plain</p><p><br></p><p>关于http协议的简单请求和预检请求的更多内容：https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS</p>","ctime":"15:16","cdate":"2018/05/14","fileId":"f1526282209636","type":"file","fileFather":"javascript","position":["javascript[32]"]},{"filename":"HTTP cookie","detail":"<p>Cookie主要用于以下三个方面：</p><p><br></p><p>会话状态管理（如用户登录状态、购物车、游戏分数或其它需要记录的信息）</p><p>个性化设置（如用户自定义设置、主题等）</p><p>浏览器行为跟踪（如跟踪分析用户行为等）</p><p><br></p><p>更多详细信息：https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Cookies</p>","ctime":"15:48","cdate":"2018/05/14","fileId":"f1526284088566","type":"file","fileFather":"javascript","position":["javascript[33]"]},{"filename":"“脚本运行时间过长”的优化","detail":"<div>一个浏览器至少存在三个线程：js引擎线程(处理js)、GUI渲染线程(渲染页面)、浏览器事件触发线程(控制交互)。</div><div><br></div><div>JavaScript引擎是基于事件驱动单线程执行的，JS引擎一直等待着任务队列中任务的到来然后加以处理，浏览器无论再什么时候都只有一个JS线程在运行JS程序。</div><div><br></div><div>GUI 渲染线程负责渲染浏览器界面，当界面需要重绘(Repaint)或由于某种操作引发回流(reflow)时,该线程就会执行。但需要注意 GUI渲染线程与JS引擎是互斥的，当JS引擎执行时GUI线程会被挂起，GUI更新会被保存在一个队列中等到JS引擎空闲时立即被执行。</div><div><br></div><div>事件触发线程，当一个事件被触发时该线程会把事件添加到待处理队列的队尾，等待JS引擎的处理。这些事件可来自JavaScript引擎当前执行的代码块如setTimeOut、也可来自浏览器内核的其他线程如鼠标点击、AJAX异步请求等，但由于JS的单线程关系所有这些事件都得排队等待JS引擎处理。</div><div><br></div><div>了解了浏览器的内核处理方式就不难理解浏览器为什么会进入假死状态了，当一段JS脚本长时间占用着处理机就会挂起浏览器的GUI更新，而后面的事件响应 也被排在队列中得不到处理，从而造成了浏览器被锁定进入假死状态。另外JS脚本中进行了DOM操作，一旦JS调用结束就会马上进行一次GUI渲染，然后才 开始执行下一个任务，所以JS中大量的DOM操作也会导致事件响应缓慢甚至真正卡死浏览器，如在IE6下一次插入大量的HTML。而如果真的弹出了“脚本 运行时间过长“的提示框则说明你的JS脚本肯定有死循环或者进行过深的递归操作了。</div><div><br></div><div>现在如果遇到了这种情况，我们可以做的不仅仅是优化 代码，html5的webWorkers提供了js的后台处理线程的API，它允许将复杂耗时的单纯js逻辑处理放在浏览器后台线程中进行处理，让js线 程不阻塞UI线程的渲染。这个线程不能和页面进行交互，如获取元素、alert等。多个线程间也是可以通过相同的方法进行数据传递。</div>","ctime":"17:57","cdate":"2018/05/16","fileId":"f1526464636366","type":"file","fileFather":"javascript","position":["javascript[34]"]},{"filename":"js浮点数运算精度","detail":"<p>https://www.cnblogs.com/ppforever/p/5011660.html<br></p>","ctime":"10:47","cdate":"2018/05/31","fileId":"f1527734867455","type":"file","fileFather":"javascript","position":["javascript[35]"]},{"filename":"XMLHttpRequest","detail":"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest","ctime":"15:07","cdate":"2018/06/01","fileId":"f1527836873574","type":"file","fileFather":"javascript","position":["javascript[36]"]},{"filename":"post请求的数据形式","detail":"<p>使用post请求发送数据时，数据形式和content-type需要正确对应。数据都是放在请求体中，</p><p>formData形式的数据为key=value&amp;key=value，content-type为application/x-www-form-urlencoded</p><p style=\"text-indent: 28px;\">request payload形式的数据为json格式，或者字符串格式，<span style=\"font-size: 1.4rem; text-indent: 2em;\">content-type为application/json；或者</span><span style=\"text-indent: 2em;\">text/plain</span></p><p style=\"text-indent: 28px;\"><span style=\"text-indent: 2em;\"><br></span></p><p style=\"text-indent: 28px;\"><span style=\"text-indent: 2em;\">原生ajax默认content-type为text/plain；</span></p><p style=\"text-indent: 28px;\"><span style=\"text-indent: 2em;\">jquery默认设置content-type为application/x-www-form-urlencoded</span></p><p style=\"text-indent: 28px;\"><span style=\"text-indent: 2em;\"><br></span></p><p style=\"text-indent: 28px;\">有的服务器会对表单提交和文件上传做特殊处理，因为表单提交数据是名值对的方式，且Content-Type为application/x-www-form-urlencoded，而文件上传服务器需要特殊处理，普通的post请求（Content-Type不是plication/x-www-form-urlencoded）数据格式不固定，不一定是名值对的方式，所以服务器无法知道具体的处理方式，所以只能通过获取原始数据流的方式来进行解析<br></p><p style=\"text-indent: 28px;\"><br></p><p style=\"text-indent: 28px;\">参考：</p><p style=\"text-indent: 28px;\">http://www.cnblogs.com/hsp-blog/p/5919877.html<br></p><p style=\"text-indent: 28px;\">https://www.cnblogs.com/xuzhudong/p/8487119.html<br></p><p style=\"text-indent: 28px;\">https://blog.csdn.net/mhmyqn/article/details/25561535<br></p>","ctime":"10:41","cdate":"2018/06/06","fileId":"f1528252904778","type":"file","fileFather":"javascript","position":["javascript[37]"],"mtime":"10:54","mdate":"2018/06/06"},{"filename":"storage事件","detail":"<p></p><div>1、当storage发生改变时，window上的StorageEvent将会被触发.&nbsp;</div><div><br></div><div>[译者：事件在同一个域下的不同页面之间触发，即在A页面注册了storge的监听处理，只有在跟A同域名下的B页面操作storage对象，A页面才会被触发storage事件]&nbsp;</div><div><br></div><div><div>2、beforeunload 事件被触发, 在 window、document 和它们的资源将要被卸载时。&nbsp;</div><div><br></div><div>当 Event 的 returnValue 属性被赋值为非空字符串时，会弹出一个对话框，让用户确认是否离开页面（示例如下）。否则，事件被静默处理。</div></div><div><br></div><div>3、ClipboardEvent 接口描述了与修改剪切板相关的事件，这些事件包括 cut 、copy 和 paste 事件。</div><div><br></div><div>4、FocusEvent 接口表示和焦点相关的事件比如 focus, blur, focusin, 和 focusout。<span style=\"font-size: 1.4rem; text-indent: 2em;\">focusin</span><span style=\"font-size: 1.4rem; text-indent: 2em;\">当一个元素即将接收焦点时触发。这一事件与focus的主要区别在于后者不冒泡。</span></div><div><span style=\"font-size: 1.4rem; text-indent: 2em;\"><br></span></div><div><span style=\"font-size: 1.4rem; text-indent: 2em;\">5、</span><span style=\"text-indent: 2em;\">ClipboardEvent 接口描述了与修改剪切板相关的事件，这些事件包括 cut 、copy 和 paste 事件。</span></div><div><span style=\"text-indent: 2em;\">6、hashchange事件，</span><span style=\"text-indent: 2em;\">当URL中的片段标识符发生改变时触发（URL中紧跟'#'号的部分，包括‘#’号）</span></div><div><span style=\"text-indent: 2em;\">7、</span><span style=\"text-indent: 2em;\">DragEvent 是一个表示拖、放交互的一个DOM event 接口。用户通过将指针设备（例如鼠标）放置在触摸表面上并且然后将指针拖动到新位置（诸如另一个DOM元素）来发起拖动。 应用程序可以按应用程序特定的方式自由解释拖放交互。</span><span style=\"text-indent: 2em;\">drag、</span><span style=\"text-indent: 2em;\">dragend、</span><span style=\"text-indent: 2em;\">dragenter、</span><span style=\"text-indent: 2em;\">dragexit、</span><span style=\"text-indent: 2em;\">dragleave、</span><span style=\"text-indent: 2em;\">dragover、</span><span style=\"text-indent: 2em;\">dragstart、</span><span style=\"text-indent: 2em;\">drop</span></div><p></p>","ctime":"09:58","cdate":"2018/06/12","fileId":"f1528768731443","type":"file","fileFather":"javascript","position":["javascript[38]"],"mtime":"10:12","mdate":"2018/06/12"},{"filename":"限制input输入整数","detail":"<p></p><div><p>// 输入内容时更新money的值</p><p>v-model=“money”</p><p>// watch money变化的值</p>money(v) {</div><div>// 转为整数</div><div><span style=\"font-size: 1.4rem; text-indent: 2em;\">v = parseInt(v);</span></div><div><span style=\"font-size: 1.4rem; text-indent: 2em;\">// 如果输入的值不是数字开头则清空输入</span></div><div><span style=\"font-size: 1.4rem; text-indent: 2em;\">if (isNaN(v)) {</span></div><div><span style=\"font-size: 1.4rem; text-indent: 2em;\">&nbsp; this.setmoney(\"\");</span></div><div><span style=\"font-size: 1.4rem; text-indent: 2em;\">&nbsp; return;</span></div><div><span style=\"font-size: 1.4rem; text-indent: 2em;\">}</span></div><div><span style=\"font-size: 1.4rem; text-indent: 2em;\">// 设置为转换后的整数</span></div><div><span style=\"font-size: 1.4rem; text-indent: 2em;\">&nbsp; this.setmoney(v);</span></div><div><span style=\"font-size: 1.4rem; text-indent: 2em;\">}</span></div><p></p>","ctime":"15:11","cdate":"2018/06/14","fileId":"f1528960276220","type":"file","fileFather":"javascript","position":["javascript[39]"],"mtime":"15:13","mdate":"2018/06/14"},{"filename":"iphonex可用高度","detail":"iphonex可用高度约为735px","ctime":"18:54","cdate":"2018/06/14","fileId":"f1528973672688","type":"file","fileFather":"javascript","position":["javascript[40]"]},{"filename":"浏览器读取图片","detail":"<p><br></p><p>&nbsp; &nbsp; &nbsp; this.$refs.fileinput.onchange = e =&gt; {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; let file = this.$refs.fileinput.files[0];</p><p>&nbsp; &nbsp; &nbsp; &nbsp; let filereader = new FileReader();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; filereader.onload = e =&gt; {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; window.vueBus.$emit(\"fileReaded\", e.target);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; };</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if (this.$refs.fileinput.files.length === 1) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; filereader.readAsDataURL(file);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; };</p>","ctime":"16:02","cdate":"2018/06/21","fileId":"f1529568165964","type":"file","fileFather":"javascript","position":["javascript[41]"]},{"filename":"操作光标","detail":"<p>&nbsp; &nbsp; &nbsp; let range = window.getSelection().getRangeAt(0);</p><p>&nbsp; &nbsp; &nbsp; let textEle = range.commonAncestorContainer;</p><p>&nbsp; &nbsp; &nbsp; range.setStart(range.startContainer, textEle.length);</p><p>&nbsp; &nbsp; &nbsp; range.setEnd(range.endContainer, textEle.length);</p>","ctime":"14:44","cdate":"2018/07/02","fileId":"f1530513894749","type":"file","fileFather":"javascript","position":["javascript[42]"]},{"filename":"es6模块转发","detail":"<pre class=\" language-javascript\" style=\"overflow: auto; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, monospace; font-size: 15.36px; color: rgb(255, 255, 255); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; direction: ltr; word-break: normal; tab-size: 4; hyphens: none; padding: 10px 1em 10px 0.7rem; margin: 0.5em auto; border-radius: 5px; background: rgb(17, 17, 17); line-height: 1.2; text-indent: 0px;\"><code class=\" language-javascript\" style=\"font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; color: rgb(166, 226, 46); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; tab-size: 4; hyphens: none; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 2px;\"><span class=\"token comment\" spellcheck=\"true\" style=\"color: rgb(117, 113, 94);\">// constants/index.js\n</span>export <span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">{</span>db<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">}</span> from <span class=\"token string\">'./db'</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">;</span>\nexport <span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">{</span>users<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">}</span> from <span class=\"token string\">'./users'</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">;</span>\n</code></pre><p style=\"color: rgb(51, 51, 51); font-family: Verdana, Arial; font-size: 15.36px; text-indent: 0px;\">使用的时候，直接加载<code style=\"font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; color: rgb(199, 37, 78); background: rgb(249, 242, 244); border-radius: 2px; padding-left: 3px; padding-right: 3px;\">index.js</code>就可以了。</p><pre class=\" language-javascript\" style=\"overflow: auto; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, monospace; font-size: 15.36px; color: rgb(255, 255, 255); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; direction: ltr; word-break: normal; tab-size: 4; hyphens: none; padding: 10px 1em 10px 0.7rem; margin: 0.5em auto; border-radius: 5px; background: rgb(17, 17, 17); line-height: 1.2; text-indent: 0px;\"><code class=\" language-javascript\" style=\"font-family: Consolas, &quot;Courier New&quot;, Courier, FreeMono, monospace; font-size: 0.7rem; color: rgb(166, 226, 46); text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; direction: ltr; word-spacing: normal; word-break: normal; tab-size: 4; hyphens: none; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; border-radius: 2px;\"><span class=\"token comment\" spellcheck=\"true\" style=\"color: rgb(117, 113, 94);\">// script.js\n</span>import <span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">{</span>db<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">,</span> users<span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">}</span> from <span class=\"token string\">'./index'</span><span class=\"token punctuation\" style=\"color: rgb(248, 248, 242);\">;</span></code></pre>","ctime":"19:21","cdate":"2018/07/03","fileId":"f1530616911218","type":"file","fileFather":"javascript","position":["javascript[43]"]},{"filename":"自制进度条","detail":"<div>&nbsp; &nbsp; &lt;script&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; window.addEventListener('DOMContentLoaded', function () {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var wrapper = document.getElementById('ball-div');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var ball = document.getElementById('ball');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var wrapperWidth = wrapper.offsetWidth;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var ballWidth = ball.offsetHeight;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var totalBall = parseInt(wrapperWidth / ballWidth) + 1;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var progressPerBall = 100 / totalBall;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ball.style.width = ballWidth + 'px';</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; function addBall() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var ballchild = document.createElement('img');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ballchild.classList.add('img-ball-hide');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ballchild.id = 'hide-ball-id';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ballchild.style.width = ballWidth + 'px';// 某些低级浏览器不能自动设置图像比例</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ballchild.setAttribute('src', 'loading/img/ball.png');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; document.getElementById('ball-div').appendChild(ballchild);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // // 添加没有显示的球</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (var i = 0; i &lt; totalBall; i++) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addBall()</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var haveShowedBalls = 0;</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 显示球</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; function showBall() {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var target = document.getElementById('hide-ball-id')</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (!target) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; target.classList.add('img-ball-show');</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; target.id = '';</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; haveShowedBalls++;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 定义控制对象</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var progressObj2 = {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; progress: 0,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fnArr: [], // 函数队列</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; runFnBoo: false,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; set progress(v) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var needShowBalls = parseInt(v / progressPerBall);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // console.log(\"needShowBalls\", needShowBalls)</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (needShowBalls &lt; 1) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 存入函数队列</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this.fnArr.push(function () {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var interval = setInterval(function () {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var forTimes = needShowBalls - haveShowedBalls;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; showBall();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // console.log(\"forTimes\", forTimes)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (forTimes-- &lt; 0) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; clearInterval(interval)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // console.log('len', progressObj2.fnArr)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; progressObj2.fnArr.shift();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; progressObj2.fnArr[0] ? progressObj2.fnArr[0]() :</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; function () {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // console.log('执行完毕')</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }, 20)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; })</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (this.runFnBoo) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this.runFnBoo = true;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this.fnArr[0]();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div><br></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 测试</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var n = 10;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var interval = setInterval(function () {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; progressObj2.progress = n;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; n = n + 10;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (n &gt;= 100) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; clearInterval(interval)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }, 20)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // progressObj2.progress = 100;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; })</div><div>&nbsp; &nbsp; &lt;/script&gt;</div>","ctime":"09:55","cdate":"2018/07/12","fileId":"f1531360539133","type":"file","fileFather":"javascript","position":["javascript[44]"]},{"filename":"dom数组排序","detail":"<p>可以在设置data-number=\"数字\"属性来区分顺序，然后如下所示比较排序</p><div style=\"color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Consolas, &quot;Courier New&quot;, monospace; line-height: 19px; white-space: pre;\"><div>            <span style=\"color: #9cdcfe;\">gameEntryA</span>.<span style=\"color: #dcdcaa;\">sort</span>((<span style=\"color: #9cdcfe;\">a</span>,<span style=\"color: #9cdcfe;\">b</span>)<span style=\"color: #569cd6;\">=&gt;</span>{</div><div>                <span style=\"color: #c586c0;\">return</span> <span style=\"color: #9cdcfe;\">a</span>.<span style=\"color: #9cdcfe;\">dataset</span>.<span style=\"color: #9cdcfe;\">number</span> - <span style=\"color: #9cdcfe;\">b</span>.<span style=\"color: #9cdcfe;\">dataset</span>.<span style=\"color: #9cdcfe;\">number</span>;</div><div>            })</div></div>","ctime":"17:15","cdate":"2018/07/18","fileId":"f1531905313946","type":"file","fileFather":"javascript","position":["javascript[45]"]}],"html":[{"filename":"加载速度优化","detail":"<p>1、前提是保证安全可用</p><p>2、基本手段是减少总加载体积和请求次数。&nbsp;</p><p>&nbsp;3、压缩代码、压缩图片等资源压缩；</p><p><span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\">4、封装精简代码，写算法的时候要追求精简，最后要去除注释。</span></p><p>5、减少图片的使用，可以用字体图标代替图片，合并图片至一张大图。</p><p>6、生成图片的缩略图，当浏览时再请求加载高清图；</p><p>7、上线前合并文件，用webpack打包；</p><p>8、</p>","mtime":"13:14","mdate":"2018/03/19","fileId":"f1510161402115","type":"file","fileFather":"html","position":["html[0]"],"stared":"no","showBoo":"false"},{"filename":"元素的快捷键","detail":"<p>accessKey 属性设置或返回元素的快捷键。快捷键规定激活元素或使元素获得焦点。</p>","mtime":"11:48","mdate":"2017/11/18","fileId":"f1510418505319","type":"file","fileFather":"html","position":["html[1]"]},{"filename":"html存储方式","detail":"<p>MDN：https://developer.mozilla.org/zh-CN/docs/Web/API/Window/sessionStorage</p><p>1、cookie是用来做客户端和服务器通信用的，数据类型是一个字符串。不管用不用得着，每次请求都会携带，所以限制最大4kb。如果用来做存储会浪费流量和网络资源。服务端通过设置响应header来设置cookie，客户端通过document.cookie来提取。</p><p>2、sessionStorage和localStorage是专门设计用来做存储的。设置key和value会比较方便，通过localStorage.setItem(key,value)、.getItem、.removeItem、sessionStorage.clear('清除所有会话存储')<span style=\"font-size: 1.4rem; text-indent: 2em;\">来使用，最大5M容量。</span></p><p>localStorage可以做长期的存储</p><p>3、sessionStorage是当前标签页的存储，不能跨标签页取值，关闭当前标签页会被删除。</p><p>4、localStorage可以跨页面取值，不过本身不带时效。可以通过.removeItem(key)方法移除存储。也可以在存储的信息里设置时效，取值时验证时效</p>","ctime":"06:41","cdate":"2018/01/10","fileId":"f1515537696287","type":"file","fileFather":"html","position":["html[2]"],"mtime":"14:09","mdate":"2018/05/18"},{"filename":"文本编辑器","detail":"<p>1、元素的<span style=\"font-size: 1.4rem; text-indent: 2em;\">oncopy事件，</span><span style=\"font-size: 1.4rem; text-indent: 2em;\">在该元素的文字被选中时</span><span style=\"font-size: 1.4rem; text-indent: 2em;\">触发</span></p>","ctime":"22:21","cdate":"2018/01/17","fileId":"f1516198871226","type":"file","fileFather":"html","position":["html[3]"],"mtime":"22:22","mdate":"2018/01/17"},{"filename":"网站必备功能","detail":"<p>1、访问量统计</p><p>2、客户端信息统计</p><p>3、访问时间，持续时间</p>","ctime":"03:57","cdate":"2018/03/24","fileId":"f1521835070488","type":"file","fileFather":"html","position":["html[4]"]},{"filename":"性能优化","detail":"<p class=\"MTTATTRIBUTE MTTNightMode_changeBgColor MTTATTRIBUTE_Done\">加载速度优化和渲染优化</p><p class=\"MTTATTRIBUTE MTTNightMode_changeBgColor MTTATTRIBUTE_Done\">1、合并压缩文件和图片资源，使用字体图标</p><p class=\"MTTATTRIBUTE MTTNightMode_changeBgColor MTTATTRIBUTE_Done\">2、不变的资源做浏览器缓存，通过固定资源名称来做</p><p class=\"MTTATTRIBUTE MTTNightMode_changeBgColor MTTATTRIBUTE_Done\">3、使用CDN，减少请求地理距离和路由次数</p><p class=\"MTTATTRIBUTE MTTNightMode_changeBgColor MTTATTRIBUTE_Done\">4、图片懒加载，上拉刷新或点击查看时再加载高清图</p><p class=\"MTTATTRIBUTE MTTNightMode_changeBgColor MTTATTRIBUTE_Done\">5、样式标签写在head里，脚本放在body结束之前</p><p class=\"MTTATTRIBUTE MTTNightMode_changeBgColor MTTATTRIBUTE_Done\">6、使用createDocumentFragment()方法集中DOM的append插入</p><p class=\"MTTATTRIBUTE MTTNightMode_changeBgColor MTTATTRIBUTE_Done\">7、使用变量缓存DOM查询结果</p><p class=\"MTTATTRIBUTE MTTNightMode_changeBgColor MTTATTRIBUTE_Done\">8、高频操作时，可设置计时器执行事件回调，if(timeout存在){<span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\" class=\"MTTATTRIBUTE MTTNightMode_changeBgColor MTTATTRIBUTE_Done\">clearTimeout}；</span></p><p class=\"MTTATTRIBUTE MTTNightMode_changeBgColor MTTATTRIBUTE_Done\"><span style=\"-webkit-text-size-adjust: 100%;\" class=\"MTTATTRIBUTE MTTNightMode_changeBgColor MTTATTRIBUTE_Done\">//设置计时器执行fn</span></p><p class=\"MTTATTRIBUTE MTTNightMode_changeBgColor MTTATTRIBUTE_Done\"><span style=\"-webkit-text-size-adjust: 100%;\" class=\"MTTATTRIBUTE MTTNightMode_changeBgColor MTTATTRIBUTE_Done\">9、用事件委托减少事件绑定；</span></p><p class=\"MTTATTRIBUTE MTTNightMode_changeBgColor MTTATTRIBUTE_Done\"><span style=\"-webkit-text-size-adjust: 100%;\" class=\"MTTATTRIBUTE MTTNightMode_changeBgColor MTTATTRIBUTE_Done\"><br></span></p><p class=\"MTTATTRIBUTE MTTNightMode_changeBgColor MTTATTRIBUTE_Done\"><span style=\"-webkit-text-size-adjust: 100%;\" class=\"MTTATTRIBUTE MTTNightMode_changeBgColor MTTATTRIBUTE_Done\">test</span></p>","ctime":"15:44","cdate":"2018/04/02","fileId":"f1522655078042","type":"file","fileFather":"html","position":["html[5]"],"mtime":"14:46","mdate":"2018/05/10","stared":"yes"},{"filename":"异步加载脚本","detail":"<p>浏览器允许脚本异步加载，方式是在script标签中添加“defer”或“async”属性。</p><p>这两个属性的区别是，defer要等DOM结构完全生成以及其他脚本执行完成。</p><p>而async是在当前脚本下载完成后立即执行，然后在继续渲染页面。</p><p>如果有多个defer脚本，会按先后顺序执行。</p><p>如果有多个async则是无序执行</p>","ctime":"12:08","cdate":"2018/04/03","fileId":"f1522728485408","type":"file","fileFather":"html","position":["html[6]"],"stared":"no","mtime":"19:01","mdate":"2018/04/03"},{"filename":"前端页面卡顿？DOM操作优化！","detail":"<p>https://note.youdao.com/web/#/file/1438837157120725/note/WEBfef8e7a153c5b6482a361463c58e5ff4/<br></p>","ctime":"17:25","cdate":"2018/05/16","fileId":"f1526462734614","type":"file","fileFather":"html","position":["html[7]"],"mtime":"13:35","mdate":"2018/06/05"},{"filename":"web worker","detail":"<p style=\"line-height: 24px; text-align: justify; text-indent: 0px;\"><font color=\"#333333\" face=\"arial\"><span style=\"font-size: 16px;\">https://note.youdao.com/web/#/file/1438837157120725/note/WEBa2202c9a45c9cfdc06958f0faa3d739f/</span></font><br></p>","ctime":"19:31","cdate":"2018/05/16","fileId":"f1526470260588","type":"file","fileFather":"html","position":["html[8]"],"mtime":"13:35","mdate":"2018/06/05"},{"filename":"苹果IOS ATS要求","detail":"<p>1、2016年底前登陆App Store的所有iOS应用将强制采用ATS(App Transport Security)安全标准，从而提升应用和系统安全性。</p><p>2、据了解，ATS安全特性是苹果在发布iOS9和OS X EI Capitan系统时公布的。ATS标准通过强力推行一系列的最好的安全实际操作来积极地促进安全性，同时要求网络请求必须在一个安全的链接上传输。开启ATS安全特性后，网络传输自动通过HTTPS协议传输而不是HTTP协议。<br></p><p>3</p>","ctime":"17:57","cdate":"2018/05/19","fileId":"f1526723847131","type":"file","fileFather":"html","position":["html[9]"],"mtime":"17:58","mdate":"2018/05/19"},{"filename":"如何配置ATS","detail":"<p>https://note.youdao.com/web/#/file/1438837157120725/note/WEB3963254defac0303bd34c9f6efe633af/<br></p><p></p>","ctime":"17:59","cdate":"2018/05/19","fileId":"f1526723945520","type":"file","fileFather":"html","position":["html[10]"],"mtime":"13:34","mdate":"2018/06/05"},{"filename":"关于iOS启用ATS安全标准的说明","detail":"<p></p><div>https://note.youdao.com/web/#/file/1438837157120725/note/WEB79a96e2ead7803002829c6b51b826333/<br></div><p></p>","ctime":"18:06","cdate":"2018/05/19","fileId":"f1526724364445","type":"file","fileFather":"html","position":["html[11]"],"mtime":"13:33","mdate":"2018/06/05"},{"filename":"客户端免导入证书","detail":"<p></p><div>http中发送https请求的问题</div><div>我的项目中登录时候访问http，8080端口的，但是为了安全，在所有的请求中需要发送https，8443端口的请求，现在就回出现一个问题就是正常访问https8443端口的时候是需要在浏览器中导入客户端证书的，但是我们想要直接在后台默认的把这个证书导入，这样就可以保证不用用户去导入客户端证书就可以访问了，哪位大神有没有什么好的解决办法呢？</div><div><span style=\"font-size: 1.4rem; text-indent: 2em;\">解决方案二：</span></div><div>去申请一个公信的SSL证书（例如Symantec SSL证书、GeoTrust SSL证书）安装到服务器上即可，如果您做的是全站的https，那就到深圳易维信-EVTrust.com 申请通配型的SSL证书,这样就不需要再在客户端导入证书了。</div><div>原文：云栖社区https://yq.aliyun.com/wenzhang/show_24822</div><p></p>","ctime":"18:13","cdate":"2018/05/19","fileId":"f1526724800801","type":"file","fileFather":"html","position":["html[12]"],"mtime":"18:14","mdate":"2018/05/19"},{"filename":"http 和 https","detail":"<p>https://note.youdao.com/web/#/file/1438837157120725/note/WEB41bbed41e485aa0cbd5fb11bbe1a6dd0/<br></p><p>原文：https://yq.aliyun.com/articles/38201</p><p><br></p>","ctime":"10:41","cdate":"2018/05/21","fileId":"f1526870493836","type":"file","fileFather":"html","position":["html[13]"],"mtime":"13:31","mdate":"2018/06/05"},{"filename":"前端静态文件如何应对HTTPS的到来","detail":"<p></p><div>https://note.youdao.com/web/#/file/1438837157120725/note/WEB37ed5be590f15263b0613edb9188455a/<br></div><p></p>","ctime":"10:56","cdate":"2018/05/21","fileId":"f1526871414993","type":"file","fileFather":"html","position":["html[14]"],"mtime":"13:30","mdate":"2018/06/05"},{"filename":"文本编辑，操作光标","detail":"<p>https://juejin.im/entry/59fc166d6fb9a044fb071c8e<br></p>","ctime":"18:17","cdate":"2018/05/28","fileId":"f1527502668490","type":"file","fileFather":"html","position":["html[15]"]},{"filename":"input上传图片文件","detail":"<p>https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input/file<br></p>","ctime":"11:27","cdate":"2018/06/01","fileId":"f1527823655989","type":"file","fileFather":"html","position":["html[16]"]},{"filename":"formData对象","detail":"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData/Using_FormData_Objects","ctime":"14:57","cdate":"2018/06/01","fileId":"f1527836279313","type":"file","fileFather":"html","position":["html[17]"]},{"filename":"更快的dom查询","detail":"<p>如果需要选中ul中所有的li，应使用ul.childNodes，相对于去get每个li会更快速</p>","ctime":"10:07","cdate":"2018/06/11","fileId":"f1528682830701","type":"file","fileFather":"html","position":["html[18]"]},{"filename":"默认采用极速模式","detail":"&lt;meta name=renderer content=webkit&gt;","ctime":"19:21","cdate":"2018/07/02","fileId":"f1530530489714","type":"file","fileFather":"html","position":["html[19]"]}],"css":[{"filename":"模糊效果","detail":"<p>filter属性</p>","ctime":"15:21","cdate":"2018/03/25","fileId":"f1521962475409","type":"file","fileFather":"css","position":["css[0]"]},{"filename":"文本垂直居中","detail":"<p>单行文本：display：table 或 line-height</p><p>多行文本：display：table</p>","ctime":"16:27","cdate":"2018/03/26","fileId":"f1522052832909","type":"file","fileFather":"css","position":["css[1]"]},{"filename":"vw vh vmin vmax ","detail":"<p>css3的新单位，规则是把视口宽度和高度分成100份，每一个单位占一份，比如width: 10vw;&nbsp; 就是10份宽度。</p><p>重要的是可以height: 10vw; 这样的化元素的高宽就可以同时根据视口宽度来定义，常用来保持固定比例</p>","ctime":"15:34","cdate":"2018/04/24","fileId":"f1524555240850","type":"file","fileFather":"css","position":["css[2]"]},{"filename":"vm响应式","detail":"<p>1、宽高的响应式和文字大小的响应式的共同方法，375和30为设计稿在iphone6的字体为30，100vw代表屏幕宽度，计算结果为大小按屏幕宽度成比例响应</p><p><span style=\"font-size: 1.4rem; text-indent: 2em;\">height: calc((100vw * 30 / 375));</span><br></p><p>font-size: calc((100vw * 30 / 375));<span style=\"font-size: 1.4rem; text-indent: 2em;\"><br></span></p><p>2、使用这种方法可以实现背景图片高宽的固定比例缩放：</p><p>width: calc(100vw - 20px);// 首先设置宽度</p><p><span style=\"font-size: 1.4rem; text-indent: 2em;\">height: calc(0.562 * (100vw - 20px));// 按比例计算高度</span></p><p><span style=\"font-size: 1.4rem; text-indent: 2em;\">background-size: contain;</span></p><p><span style=\"font-size: 1.4rem; text-indent: 2em;\">background-repeat: no-repeat;</span></p><p><span style=\"font-size: 1.4rem; text-indent: 2em;\">background-position: center;</span></p><p><span style=\"font-size: 1.4rem; text-indent: 2em;\">background-image: url('./case.jpg');</span></p><p><span style=\"font-size: 1.4rem; text-indent: 2em;\">3、img固定比例只需定义好宽度就行，而且vw比%好在不受父节点宽度限制，父节点不用必须定义高宽</span></p>","ctime":"15:03","cdate":"2018/04/27","fileId":"f1524812585328","type":"file","fileFather":"css","position":["css[3]"],"mtime":"15:49","mdate":"2018/04/27"},{"filename":"translatex移动端不识别100%","detail":"<p>请用translate3d（100%，0，0）代替</p>","ctime":"10:10","cdate":"2018/06/29","fileId":"f1530238205413","type":"file","fileFather":"css","position":["css[4]"]},{"filename":"响应式rem方法","detail":"<div>自己研发：比如：设计图是在iphone67的375宽度设计的，那么就设定375宽度下的rem为1，宽度增加则1的绝对值也增加<p><br></p></div><div>@media only screen and (max-width: 1024px) {</div><div>&nbsp; html {</div><div>&nbsp; &nbsp; font-size: calc((100vw * 12 / 375));</div><div>&nbsp; }</div><div>}</div><div><br></div><div>然而在某些范围可以固定定义</div><div>@media only screen and (min-width: 1025px) {</div><div>&nbsp; html {</div><div>&nbsp; &nbsp; font-size: 25px;</div><div>&nbsp; }</div><div>}</div><div><br></div>","ctime":"14:16","cdate":"2018/07/05","fileId":"f1530771369133","type":"file","fileFather":"css","position":["css[5]"]},{"filename":"变形x按钮","detail":"<p>自制：</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=\"options-btn cross-btn\"&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=\"up-bar three-bar\"&gt;&lt;/div&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=\"middle-bar three-bar\"&gt;&lt;/div&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=\"down-bar three-bar\"&gt;&lt;/div&gt;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</p><p>&nbsp; &nbsp; .options-btn {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; position: absolute;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; left: 0;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; top: 0;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; padding: 0.8rem 1.5rem;</p><p><br></p><p>&nbsp; &nbsp; &nbsp; &nbsp; .three-bar {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; height: 0.25555rem;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; width: 2rem;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; margin: 0.455566rem 0;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background-color: #000;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; transition: all 0.5s ease-out;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; }</p><p><br></p><p>&nbsp; &nbsp; .cross-btn {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; .up-bar {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; transform-origin: right;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; transform: rotateZ(-45deg);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p><br></p><p>&nbsp; &nbsp; &nbsp; &nbsp; .middle-bar {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; opacity: 0;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p><br></p><p>&nbsp; &nbsp; &nbsp; &nbsp; .down-bar {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; transform-origin: right;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; transform: rotateZ(45deg);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; }</p>","ctime":"19:33","cdate":"2018/07/09","fileId":"f1531135981210","type":"file","fileFather":"css","position":["css[6]"],"mtime":"19:33","mdate":"2018/07/09"},{"filename":"动画延迟的作用！","detail":"<p>有的浏览器渲染动画有问题，动画不执行，需要给动画加个延迟执行</p>","ctime":"21:02","cdate":"2018/07/11","fileId":"f1531314134605","type":"file","fileFather":"css","position":["css[7]"],"mtime":"11:02","mdate":"2018/07/25"},{"filename":"input 默认样式","detail":"<p>input::placeholder {</p><p>&nbsp; font-size: 1rem;</p><p>&nbsp; letter-spacing: 2px;</p><p>}</p><p>input::-webkit-outer-spin-button,</p><p>input::-webkit-inner-spin-button {</p><p>&nbsp; -webkit-appearance: none;</p><p>}</p><p>input[type=\"number\"] {</p><p>&nbsp; -moz-appearance: textfield;</p><p>}</p>","ctime":"10:56","cdate":"2018/07/25","fileId":"f1532487407591","type":"file","fileFather":"css","position":["css[8]"]},{"filename":"溢出隐藏写法","detail":"<p>// 多行文本溢出隐藏</p><p>display: -webkit-box;</p><p>overflow: hidden;</p><p>text-overflow: ellipsis;</p><p>word-break: break-all;</p><p>-webkit-box-orient: vertical;</p><p>-webkit-line-clamp: 3;</p><p><br></p><p>//单行文本溢出隐藏</p><p>overflow: hidden;</p><p>text-overflow: ellipsis;</p><p>white-space: nowrap;</p>","ctime":"14:07","cdate":"2018/07/26","fileId":"f1532585271366","type":"file","fileFather":"css","position":["css[9]"]},{"filename":"iphone placeholder垂直居中问题","detail":"<p>input::placeholder {</p><p>&nbsp; &nbsp; line-height: 1rem;</p><p>&nbsp; &nbsp; padding-top: 0.1rem;</p><p>&nbsp; &nbsp; padding-bottom: 0.5rem;</p><p>}</p><p>可以通过调试line-height 和padding属性来控制，判断是否是iphone来加载相应样式</p>","ctime":"18:29","cdate":"2018/07/26","fileId":"f1532600994520","type":"file","fileFather":"css","position":["css[10]"]}],"jquery":[{"filename":"$.ajax全局配置默认值","detail":"<p>// 设置ajax请求默认值</p><p>$.ajaxSetup({</p><p>&nbsp; xhrFields: {</p><p>&nbsp; &nbsp; withCredentials: true</p><p>&nbsp; },</p><p>&nbsp; crossDomain: true</p><p>})</p>","ctime":"15:38","cdate":"2018/06/07","fileId":"f1528357125034","type":"file","fileFather":"jquery","position":["jquery[0]"]}],"移动端兼容性":[{"filename":"自动获取焦点","detail":"<p>案例：安卓中QQ、uc浏览器下虽然获取了焦点，但是无法弹出数字软键盘；ios禁止自动获取焦点，也不能用focus获取焦点\n解决方案：&nbsp;</p><p>1、input.trigger(\"click\").focus()；</p><p>&nbsp;2、ios可以解除不自动获取焦点的限制：[self.appWebView setKeyboardDisplayRequiresUserAction:NO];(这个貌似是非浏览器端开发能用的)</p>","mtime":"01:08","mdate":"2017/12/29","fileId":"f1510062730732","type":"file","fileFather":"移动端兼容性","position":["移动端兼容性[0]"],"stared":"no"},{"filename":"暗语","detail":"<p>龙门飞甲暗语，反应什么情况下听别人的，什么情况下需要提意见</p><p>手下提出风里刀和雨化田难以辨认，应如何确认呢？</p><p>雨化田提供了一个暗语，“龙门飞甲，便知真假”。</p><p>如果手下有自己更喜欢的暗语选择也不能提议更改暗语，如果手下提议更好自己喜欢的暗语，那这个手下就有问题了，因为雨化田的暗语没有问题。</p><p>但是，如果雨化田提的暗语为“吃了吗？，嗯”。这时手下再只是接受而不提意见，那这手下就有问题了。因为这个暗语所有人都有很高概率说，容易造成混淆，所以需要更改暗语。</p>","ctime":"04:00","cdate":"2017/11/26","fileId":"f1511640023678","type":"file","fileFather":"移动端兼容性","position":["移动端兼容性[1]"],"mtime":"01:10","mdate":"2017/12/29","showBoo":"false"},{"filename":"设备像素比","detail":"<p>1、window.devicePixelRatio属性，返回当前设备的逻辑像素和物理像素的比例</p>","ctime":"21:42","cdate":"2018/01/17","fileId":"f1516196548503","type":"file","fileFather":"移动端兼容性","position":["移动端兼容性[2]"],"mtime":"21:42","mdate":"2018/01/17","stared":"no"},{"filename":"ios兼容性","detail":"<p>1、css3的animation动画属性，需要拆开来写，简写形式会不生效</p><p>2、ios10的safari浏览器，规定不能禁止用户的缩放操作，所以meta标签禁止缩放不生效</p>","ctime":"15:19","cdate":"2018/06/29","fileId":"f1530256785800","type":"file","fileFather":"移动端兼容性","position":["移动端兼容性[3]"]},{"filename":"判断横竖屏","detail":"<p>1、css</p><p>/*竖屏*/</p><p>@media screen and (orientation: portrait){</p><p>　body{background:#f00}</p><p>}</p><p>/*横屏*/</p><p>@media screen and (orientation: landscape){</p><p>　body{background:#000}</p><p>}</p><p><br></p><p>2、js</p><p>据说在横竖屏切换的时候有<span style=\"color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; text-indent: 0px; font-size: 1.4rem;\">orientationChange事件发生，然后判断</span><span style=\"font-size: 1.4rem; text-indent: 2em;\">orientation属性的值。这个值可能在window下也可能在screen下</span></p><p><span style=\"text-indent: 2em;\">https://developer.mozilla.org/zh-CN/docs/Web/Events/orientationchange<br></span></p><p>if(window.orientation==90||window.orientation==-90){</p><p>　console.log(\"横屏状态！\")</p><p>}else if(window.orientation==0||window.orientation==180){</p><p>　console.log(\"竖屏状态！\")</p><p>}</p><p><br></p><p>不过以上二者的共有问题是，<span style=\"background-color: rgb(255, 255, 0); color: rgb(102, 102, 102); font-family: 微软雅黑, arial, 宋体, tahoma, Helvetica, sans-serif; font-size: 16px; text-align: justify; text-indent: 32px;\">如果在手机系统设置中关闭了屏幕旋转，那么这两个监测方式将被无视掉！</span></p><p>3、<br></p><p>可以在<span style=\"color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; text-indent: 0px; font-size: 1.4rem;\">onresize的时候</span><span style=\"font-size: 1.4rem; text-indent: 2em;\">通过判断窗口的宽高和比例来判断横竖屏，然后旋转容器90度</span></p><p><br></p>","ctime":"14:30","cdate":"2018/07/11","fileId":"f1531290658561","type":"file","fileFather":"移动端兼容性","position":["移动端兼容性[4]"],"mtime":"17:12","mdate":"2018/07/11"},{"filename":"个性化","detail":"h h<p>h h</p>","ctime":"15:21","cdate":"2018/07/24","fileId":"f1532416917216","type":"file","fileFather":"移动端兼容性","position":["移动端兼容性[5]"]}],"vue":[{"filename":"vue+swiper","detail":"<p></p><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&lt;!--&nbsp;The&nbsp;ref&nbsp;attr&nbsp;used&nbsp;to&nbsp;find&nbsp;the&nbsp;swiper&nbsp;instance&nbsp;--&gt;</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&lt;template&gt;</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&lt;swiper&nbsp;:options=\"swiperOption\"&nbsp;ref=\"mySwiper\"&nbsp;@someSwiperEvent=\"callback\"&gt;</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;slides&nbsp;--&gt;</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;swiper-slide&gt;I'm&nbsp;Slide&nbsp;1&lt;/swiper-slide&gt;</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;swiper-slide&gt;I'm&nbsp;Slide&nbsp;2&lt;/swiper-slide&gt;</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;!--&nbsp;Optional&nbsp;controls&nbsp;--&gt;</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;class=\"swiper-pagination\"&nbsp;&nbsp;slot=\"pagination\"&gt;&lt;/div&gt;</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;class=\"swiper-button-prev\"&nbsp;slot=\"button-prev\"&gt;&lt;/div&gt;</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;class=\"swiper-button-next\"&nbsp;slot=\"button-next\"&gt;&lt;/div&gt;</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&nbsp;class=\"swiper-scrollbar\"&nbsp;&nbsp;&nbsp;slot=\"scrollbar\"&gt;&lt;/div&gt;</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&lt;/swiper&gt;</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&lt;/template&gt;</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&lt;script&gt;</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;export&nbsp;default&nbsp;{</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;'carrousel',</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;data()&nbsp;{</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;{</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swiperOption:&nbsp;{</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;some&nbsp;swiper&nbsp;options/callbacks</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;所有的参数同&nbsp;swiper&nbsp;官方&nbsp;api&nbsp;参数</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;...</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;},</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;computed:&nbsp;{</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swiper()&nbsp;{</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.$refs.mySwiper.swiper</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;},</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;mounted()&nbsp;{</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;current&nbsp;swiper&nbsp;instance</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;然后你就可以使用当前上下文内的swiper对象去做你想做的事了</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log('this&nbsp;is&nbsp;current&nbsp;swiper&nbsp;instance&nbsp;object',&nbsp;this.swiper)</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.swiper.slideTo(3,&nbsp;1000,&nbsp;false)</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;&nbsp;&nbsp;}</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&nbsp;&nbsp;}</span></div><div class=\"line\" style=\"border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 16px; line-height: inherit; font-family: &quot;Courier New&quot;, monospace; vertical-align: baseline; color: rgb(77, 77, 77); text-indent: 0px; white-space: pre; background-color: rgb(240, 240, 240);\"><span class=\"text\" style=\"border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">&lt;/script&gt;</span></div><p></p>","ctime":"16:33","cdate":"2018/01/15","fileId":"f1516005220434","type":"file","fileFather":"vue","position":["vue[0]"],"mtime":"16:34","mdate":"2018/01/15"},{"filename":"vue-cli中全局引入jquery","detail":"<ol style=\"margin-top: 1.5em; margin-bottom: 1.5em; margin-left: 3em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; text-indent: 0px; background-color: rgb(255, 255, 255);\"><li style=\"margin-top: 0.3em; margin-bottom: 0.3em;\"><p>首先在<code style=\"font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">package.json</code>里加入，</p><pre style=\"overflow: auto; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 1em; margin-top: 1.5em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; background: url(&quot;../img/blueprint.png&quot;) 0% 0% / 30px, 0% 0% / 30px rgb(246, 246, 246); border: none; border-radius: 4px; max-height: 35em; position: relative;\"><code class=\"js\" style=\"font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; color: inherit; background: none; border-radius: 0px; white-space: inherit; overflow-wrap: normal;\">dependencies:{\n <span class=\"hljs-string\" style=\"color: rgb(221, 17, 68);\">\"jquery\"</span> : <span class=\"hljs-string\" style=\"color: rgb(221, 17, 68);\">\"^2.2.3\"</span>\n}</code></pre><p>然后 nmp install</p></li><li style=\"margin-top: 0.3em; margin-bottom: 0.3em;\"><p>在<code style=\"font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">webpack.base.conf.js</code>里加入</p><pre style=\"overflow: auto; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 1em; margin-top: 1.5em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; background: url(&quot;../img/blueprint.png&quot;) 0% 0% / 30px, 0% 0% / 30px rgb(246, 246, 246); border: none; border-radius: 4px; max-height: 35em; position: relative;\"><code class=\"js\" style=\"font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; color: inherit; background: none; border-radius: 0px; white-space: initial; overflow-wrap: normal; word-break: break-word;\"><span class=\"hljs-keyword\" style=\"font-weight: bold;\">var</span>&nbsp;webpack =&nbsp;<span class=\"hljs-built_in\" style=\"color: rgb(0, 134, 179);\">require</span>(<span class=\"hljs-string\" style=\"color: rgb(221, 17, 68);\">\"webpack\"</span>)</code></pre></li><li style=\"margin-top: 0.3em; margin-bottom: 0.3em;\"><p>在module.exports的最后加入</p><pre style=\"overflow: auto; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 1em; margin-top: 1.5em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; background: url(&quot;../img/blueprint.png&quot;) 0% 0% / 30px, 0% 0% / 30px rgb(246, 246, 246); border: none; border-radius: 4px; max-height: 35em; position: relative;\"><code class=\"js\" style=\"font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; color: inherit; background: none; border-radius: 0px; white-space: inherit; overflow-wrap: normal;\">plugins: [\n <span class=\"hljs-keyword\" style=\"font-weight: bold;\">new</span> webpack.optimize.CommonsChunkPlugin(<span class=\"hljs-string\" style=\"color: rgb(221, 17, 68);\">'common.js'</span>),\n <span class=\"hljs-keyword\" style=\"font-weight: bold;\">new</span> webpack.ProvidePlugin({\n     <span class=\"hljs-attr\">jQuery</span>: <span class=\"hljs-string\" style=\"color: rgb(221, 17, 68);\">\"jquery\"</span>,\n     <span class=\"hljs-attr\">$</span>: <span class=\"hljs-string\" style=\"color: rgb(221, 17, 68);\">\"jquery\"</span>\n })\n]</code></pre></li><li style=\"margin-top: 0.3em; margin-bottom: 0.3em;\"><p>然后一定要重新&nbsp;<strong style=\"font-weight: bold;\">run dev</strong></p></li><li style=\"margin-top: 0.3em; margin-bottom: 0.3em;\"><p>在main.js 引入就ok了</p><pre class=\"hljs clean\" style=\"overflow: auto; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; background: url(&quot;../img/blueprint.png&quot;) 0% 0% / 30px, 0% 0% / 30px rgb(246, 246, 246); border: none; border-radius: 4px; max-height: 35em; position: relative;\"><code style=\"font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; color: inherit; background: none; border-radius: 0px; white-space: initial; overflow-wrap: normal; word-break: break-word;\"><span class=\"hljs-keyword\" style=\"font-weight: bold;\">import</span>&nbsp;$&nbsp;<span class=\"hljs-keyword\" style=\"font-weight: bold;\">from</span>&nbsp;<span class=\"hljs-string\" style=\"color: rgb(221, 17, 68);\">'jquery'</span></code></pre></li></ol>","ctime":"19:42","cdate":"2018/03/27","fileId":"f1522150959562","type":"file","fileFather":"vue","position":["vue[1]"]},{"filename":"vue-router设置页面title","detail":"<pre style=\"overflow: auto; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 1em; margin-top: 1.5em; margin-bottom: 1.5em; line-height: 1.45; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background: url(&quot;../img/blueprint.png&quot;) 0% 0% / 30px, 0% 0% / 30px rgb(246, 246, 246); border: none; border-radius: 4px; max-height: 35em; position: relative; text-indent: 0px;\"><code class=\"javascript\" style=\"font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; color: inherit; background: none; border-radius: 0px; white-space: inherit; overflow-wrap: normal;\"><span class=\"hljs-comment\" style=\"color: rgb(153, 153, 136);\">// 定义路由的时候如下定义，name也可为中文</span>\n<span class=\"hljs-keyword\" style=\"font-weight: bold;\">const</span> routes = [\n  { <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\" style=\"color: rgb(221, 17, 68);\">'/goods'</span>, <span class=\"hljs-attr\">component</span>: goods, <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\" style=\"color: rgb(221, 17, 68);\">'goods'</span> },\n  { <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\" style=\"color: rgb(221, 17, 68);\">'/ratings'</span>, <span class=\"hljs-attr\">component</span>: ratings, <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\" style=\"color: rgb(221, 17, 68);\">'ratings'</span> },\n  { <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\" style=\"color: rgb(221, 17, 68);\">'/seller'</span>, <span class=\"hljs-attr\">component</span>: seller, <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\" style=\"color: rgb(221, 17, 68);\">'seller'</span> }\n];\n<span class=\"hljs-comment\" style=\"color: rgb(153, 153, 136);\">// 创建路由实例</span>\n<span class=\"hljs-keyword\" style=\"font-weight: bold;\">const</span> router = <span class=\"hljs-keyword\" style=\"font-weight: bold;\">new</span> VueRouter({\n  <span class=\"hljs-attr\">routes</span>: routes\n})\n<span class=\"hljs-comment\" style=\"color: rgb(153, 153, 136);\">// 关键在这里，设置afterEach钩子函数</span>\nrouter.afterEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">to, <span class=\"hljs-keyword\" style=\"font-weight: bold;\">from</span>, next</span>) =&gt;</span> {\n  <span class=\"hljs-built_in\" style=\"color: rgb(0, 134, 179);\">document</span>.title = to.name;\n})</code></pre>","ctime":"12:29","cdate":"2018/04/12","fileId":"f1523507348459","type":"file","fileFather":"vue","position":["vue[2]"]},{"filename":"vue主要功能","detail":"<div>Vue.js的一大特色就是构建单页面应用十分方便，既然要方便构建单页面应用那么自然少不了路由，vue-router就是vue官方提供的一个路由框架。总体来说，vue-router设计得简单好用，下面就来聊聊我实际用到过的一些方法，文章没有提到的可以去查看官方文档。vue-router的安装这里就不提了，相信会来看这篇博客同学，这些基本能力都是有的。</div><div><br></div><div>先上例子</div><div>&lt;!-- html部分，省略head --&gt;</div><div>&lt;div id=\"app\"&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"content\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;router-link to=\"/goods\"&gt;商品&lt;/router-link&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;router-link to=\"/ratings\"&gt;评论&lt;/router-link&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;router-link to=\"/seller\"&gt;商家&lt;/router-link&gt;</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; &lt;router-view&gt;&lt;/router-view&gt;</div><div>&lt;/div&gt;</div><div>&lt;script src=\"path-to-vue\"&gt;&lt;/script&gt;</div><div>&lt;script src=\"path-to-vue-router\"&gt;&lt;/script&gt;</div><div>// 首先定义或者引入路由的组件</div><div>// 方法一：直接定义路由组件</div><div>const goods = { template: '&lt;p&gt;goods&lt;/p&gt;' };</div><div>const ratings = { template: '&lt;p&gt;ratings&lt;/p&gt;' };</div><div>const seller = { template: '&lt;p&gt;seller&lt;/p&gt;' };</div><div>// 方法二：import引入路由组件</div><div>import goods from 'components/goods/goods';</div><div>import ratings from 'components/ratings/ratings';</div><div>import seller from 'components/seller/seller';</div><div>// 然后定义路由(routes)，components还可以是Vue.extend()创建的</div><div>const routes = [</div><div>&nbsp; { path: '/goods', component: goods },</div><div>&nbsp; { path: '/ratings', component: ratings },</div><div>&nbsp; { path: '/seller', component: seller }</div><div>];</div><div>// 接着创建路由实例</div><div>const router = new VueRouter({</div><div>&nbsp; // ES6缩写语法，相当于routes:routes</div><div>&nbsp; routes&nbsp;&nbsp;</div><div>});</div><div>// 最后创建vue实例并挂载</div><div>const app = new Vue({</div><div>&nbsp; el: '#app',</div><div>&nbsp; router</div><div>});</div><div>// 或者</div><div>const app = new Vue({</div><div>&nbsp; router</div><div>}).$mount('#app')</div><div>到这里就可以用vue-router轻松搭建一个单页面应用了。我一般都是使用模块化编程的形式，用.vue单文件，不知道在模块化编程里怎么加载vue-router的可以参考我的某个项目源码。</div><div><br></div><div>router-link和router-view</div><div>看了上面的例子，一定对router-link和router-view很感兴趣。</div><div><br></div><div>router-link</div><div>从上面例子中的书写形式就可以看出，router-link是一个组件，它默认会被渲染成一个带有链接的a标签，通过to属性指定链接地址。</div><div>注意：被选中的router-link将自动添加一个class属性值.router-link-active。</div><div><br></div><div>router-link属性配置</div><div>to</div><div>这是一个必须设置的属性，否则路由无法生效。它表示路由的链接，可以是一个字符串也可以是一个描述目标位置的对象。</div><div><br></div><div>&lt;router-link to=\"goods\"&gt;&lt;/router-link&gt;</div><div>&lt;router-link to=\"{path='goods'}\"&gt;&lt;/router-link&gt;</div><div>replace</div><div>一个布尔类型，默认为false。如果replace设置为true，那么导航不会留下history记录，点击浏览器回退按钮不会再回到这个路由。</div><div><br></div><div>&lt;router-link to=\"goods\" replace&gt;&lt;/router-link&gt;</div><div>tag</div><div>router-link默认渲染成a标签，也有方法让它渲染成其他标签，tag属性就用来设置router-link渲染成什么标签的。</div><div><br></div><div>&lt;!-- 渲染成li标签 --&gt;</div><div>&lt;router-link to=\"goods\" tag=\"li\"&gt;&lt;/router-link&gt;</div><div>active-class</div><div>上面说了被选中的router-link将自动添加一个class属性值.router-link-active，这个属性就是来修改这个class值的。</div><div><br></div><div>router-view</div><div>这个组件十分关键，它就是用来渲染匹配到的路由的。&nbsp;</div><div>可以给router-view组件设置transition过渡，具体用法见Vue2.0 Transition常见用法全解惑。&nbsp;</div><div>还可以配合&lt;keep-alive&gt;使用，keep-alive可以缓存数据，这样不至于重新渲染路由组件的时候，之前那个路由组件的数据被清除了。比如对当前的路由组件a进行了一些DOM操作之后，点击进入另一个路由组件b，再回到路由组件a的时候之前的DOM操作还保存在，如果不加keep-alive再回到路由组件a时，之前的DOM操作就没有了，得重新进行。如果你的应用里有一个购物车组件，就需要用到keep-alive。</div><div><br></div><div>&lt;transition&gt;</div><div>&nbsp; &lt;keep-alive&gt;</div><div>&nbsp; &nbsp; &lt;router-view&gt;&lt;/router-view&gt;</div><div>&nbsp; &lt;/keep-alive&gt;</div><div>&lt;/transition&gt;</div><div>一些小需求怎么实现</div><div>不同路由不同页面标题</div><div>多页面应用我们可以给每一个页面���设置一个不同的标题，但是如果是单页面应用的路由呢？其实也是可以实现的，实现的方法不止一种，我之前用的是结合命名路由和导航钩子函数的方法。如下：</div><div><br></div><div>// 定义路由的时候如下定义，name也可为中文</div><div>const routes = [</div><div>&nbsp; { path: '/goods', component: goods, name: 'goods' },</div><div>&nbsp; { path: '/ratings', component: ratings, name: 'ratings' },</div><div>&nbsp; { path: '/seller', component: seller, name: 'seller' }</div><div>];</div><div>// 创建路由实例</div><div>const router = new VueRouter({</div><div>&nbsp; routes: routes</div><div>})</div><div>// 关键在这里，设置afterEach钩子函数</div><div>router.afterEach((to, from, next) =&gt; {</div><div>&nbsp; document.title = to.name;</div><div>})</div><div>命名路由</div><div>既然用到了命名路由，这里就提一下吧。命名路由就是用一个名称来标识一个路由，在定义路由的时候设置一个name属性即可。在router-link中也可以用路由的名字来链接到一个路由。</div><div><br></div><div>&lt;router-link :to=\"{ name: 'seller'}\"&gt;seller&lt;/router-link&gt;</div><div>导航钩子</div><div>这个我还没怎么用过，它主要是用来拦截导航的，想使用的参考官方文档吧。</div><div><br></div><div>怎么刚进入应用就渲染某个路由组件</div><div>刚进入应用都是进入到“/”这个路由的，如果想直接进入到“/goods”怎么办，这里提供两种方法。一种是利用重定向，另一种是利用vue-router的导航式编程。</div><div><br></div><div>重定向</div><div>const routes = [</div><div>&nbsp; { path: '/', redirect: '/goods'}</div><div>]</div><div>是不是很简单呢？重定向的目标也可以是一个命名的路由。</div><div><br></div><div>const routes = [</div><div>&nbsp; { path: '/', redirect: { name: 'goods' }}</div><div>]</div><div>导航式编程</div><div>利用vue-router的导航式编程的router.push方法也可以实现上面的需求。</div><div><br></div><div>// 在创建vue实例并挂载后调用</div><div>router.push('/goods')</div><div>router.push方法就是用来动态导航到不同的链接的。它会向history栈添加一个新的记录，点击&lt;router-link :to=\"...\"&gt;等同于调用router.push(...)。</div><div><br></div><div>vue-router中还有router.replace方法和router.go方法，概念及用法可参考https://router.vuejs.org/zh-cn/essentials/navigation.html。</div>","ctime":"12:32","cdate":"2018/04/12","fileId":"f1523507552109","type":"file","fileFather":"vue","position":["vue[3]"]},{"filename":"vue-router的history模式","detail":"<p>如果在index.html文件里用标签引入文件，在vue-router的hash模式下使用相对路径是可以的。而在history模式下就需要修改路径。</p><p>因为hash模式下根路径不变，而history模式下根路径会变，所以：</p><p>1、./ 是指用户所在的当前目录（相对路径）；</p><p>2、/ 是指根目录（绝对路径，项目根目录），也就是项目根目录；</p><p>3、对于hash模式，根路径是固定的，就是项目的根目录，但是history模式下，以 / 开头的嵌套路径会被当作根路径，所以使用“./”引入文件，就会找不到文件了，因为文件本身就是在项目根目录下的，并不在嵌套路径这个目录下。</p><p>4、总结，无论hash模式还是history模式，可以直接使用“/”从项目根目录引入静态文件。</p>","ctime":"16:32","cdate":"2018/04/12","fileId":"f1523521927429","type":"file","fileFather":"vue","position":["vue[4]"],"mtime":"15:21","mdate":"2018/07/24","stared":"yes"},{"filename":"vue-router过渡左右切换","detail":"<p style=\"text-indent: 0px;\">https://note.youdao.com/web/#/file/1438837157120725/note/WEBfe2ec02266de17b64471778196e63c6d/<br></p>","ctime":"16:04","cdate":"2018/04/17","fileId":"f1523952246247","type":"file","fileFather":"vue","position":["vue[5]"],"mtime":"13:38","mdate":"2018/06/05"},{"filename":"vue-router跳转时传递参数","detail":"<p>1.Params</p><p>由于动态路由也是传递params的，所以在 this.$router.push() 方法中 path不能和params一起使用，否则params将无效。需要用name来指定页面。在目标页面通过this.$route.params获取参数</p><div style=\"color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Consolas, &quot;Courier New&quot;, monospace; line-height: 19px; white-space: pre;\"><span style=\"color: #569cd6;\">this</span>.<span style=\"color: #9cdcfe;\">$router</span>.<span style=\"color: #dcdcaa;\">push</span>({ <span style=\"color: #9cdcfe;\">name:</span> <span style=\"color: #ce9178;\">\"页面name\"</span>, <span style=\"color: #9cdcfe;\">params:</span> { <span style=\"color: #9cdcfe;\">参数：参数</span> } });</div><p><span style=\"color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; text-indent: 0px; font-size: 1.4rem;\">2.Query</span></p><p><span style=\"color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; text-indent: 0px; font-size: 1.4rem;\">query传递数据的方式就是URL常见的查询参数，如/Homepage?userId=000&amp;username=peter</span><span style=\"text-indent: 2em;\"><font color=\"#333333\" face=\"-apple-system, Helvetica Neue, Helvetica, Arial, PingFang SC, Hiragino Sans GB, WenQuanYi Micro Hei, Microsoft Yahei, sans-serif\">。在目标页面通过this.$route.query获取参数</font></span></p><div style=\"color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Consolas, &quot;Courier New&quot;, monospace; line-height: 19px; white-space: pre;\"><span style=\"color: #569cd6;\">this</span>.<span style=\"color: #9cdcfe;\">$router</span>.<span style=\"color: #dcdcaa;\">push</span>({ <span style=\"color: #9cdcfe;\">name:</span> <span style=\"color: #ce9178;\">\"新闻\"</span>, <span style=\"color: #9cdcfe;\">query:</span> { <span style=\"color: #9cdcfe;\">参数：参数</span> } });</div>","ctime":"15:47","cdate":"2018/04/25","fileId":"f1524642433401","type":"file","fileFather":"vue","position":["vue[6]"],"mtime":"15:37","mdate":"2018/05/30"},{"filename":"run build 丢失css","detail":"<p>// 在prod.config.js中，这项配置会导致某些css样式在run build的时候被更改或丢失，将其删除即可<br></p><p>new OptimizeCSSPlugin({</p><p>cssProcessorOptions: config.build.productionSourceMap</p><p>? { safe: true, map: { inline: false } }</p><p>&nbsp;: { safe: true }</p><p>}),</p>","ctime":"15:38","cdate":"2018/05/08","fileId":"f1525765137701","type":"file","fileFather":"vue","position":["vue[7]"],"mtime":"18:31","mdate":"2018/05/28"},{"filename":"vue-router跳转拦截登录","detail":"<p>https://note.youdao.com/web/#/file/1438837157120725/note/WEB4af2f34864c17556b4436c6262a3b44f/<br></p>","ctime":"14:39","cdate":"2018/05/16","fileId":"f1526452798939","type":"file","fileFather":"vue","position":["vue[8]"],"mtime":"13:37","mdate":"2018/06/05"},{"filename":"vue实例钩子函数顺序","detail":"<p>1、created-&gt; mounted-&gt; activated，退出时触发deactivated<br></p><p>2、keep-alive保存组建结构时，重新进入组建的化mounted及之前的钩子不会触发，activated钩子会被触发</p>","ctime":"16:38","cdate":"2018/05/25","fileId":"f1527237481700","type":"file","fileFather":"vue","position":["vue[9]"],"mtime":"16:39","mdate":"2018/05/25"},{"filename":"axios POST请求时后台接收不到数据","detail":"<p>https://note.youdao.com/web/#/file/1438837157120725/note/WEB644e3f5fe2700fa09dddc6502026a1f7/<br></p><p>原文：https://www.jianshu.com/p/042632dec9fb</p>","ctime":"18:48","cdate":"2018/06/05","fileId":"f1528195708159","type":"file","fileFather":"vue","position":["vue[10]"],"mtime":"18:48","mdate":"2018/06/05"},{"filename":"axios全局修改json传输","detail":"<div>axios.defaults.transformRequest = [function transformRequest(data, headers) {</div><div>&nbsp; /* 解决json放在request payload中提交过去的情况*/</div><div>&nbsp; if (!data) {</div><div>&nbsp; &nbsp; return</div><div>&nbsp; }</div><div>&nbsp; let keys2 = Object.keys(data);</div><div>&nbsp; /* 把json转成等号相连的键值对形式 */</div><div>&nbsp; return encodeURI(keys2.map(name =&gt; `${name}=${data[name]}`).join('&amp;'));</div><div>}]</div>","ctime":"15:39","cdate":"2018/06/07","fileId":"f1528357196978","type":"file","fileFather":"vue","position":["vue[11]"]},{"filename":"vue-router默认跳转到登录页","detail":"<p></p><div>如果router.go()不能使用，可以在APP.vue中使用以下方法跳转<p><span style=\"font-size: 1.4rem; text-indent: 2em;\">redirectPage(url) {</span><br></p></div><div>&nbsp; &nbsp; &nbsp; if (!url.includes(\"#\")) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; return \"/login\";</div><div>&nbsp; &nbsp; &nbsp; } else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; let hash = url.split(\"#\")[1].replace(\"/\", \"\");</div><div>&nbsp; &nbsp; &nbsp; &nbsp; if (hash === \"\") {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return \"/login\";</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; },</div><div>created（）｛</div><div>&nbsp; &nbsp; let currentUrl = location.href;<br></div><div>&nbsp; &nbsp; if(this.redirectPage(currentUrl) === '/login'<span style=\"font-size: 1.4rem; text-indent: 2em;\">){</span></div><div><span style=\"font-size: 1.4rem; text-indent: 2em;\">&nbsp; &nbsp; &nbsp; &nbsp; this.</span><span style=\"text-indent: 2em;\">$router.push(\"/login\");</span></div><div><span style=\"font-size: 1.4rem; text-indent: 2em;\">&nbsp; }</span></div><div>｝</div><p></p>","ctime":"13:56","cdate":"2018/06/19","fileId":"f1529387806936","type":"file","fileFather":"vue","position":["vue[12]"],"mtime":"13:58","mdate":"2018/06/19"},{"filename":"vue头像上传组件","detail":"https://www.npmjs.com/package/vue-cropper","ctime":"20:46","cdate":"2018/06/19","fileId":"f1529412389605","type":"file","fileFather":"vue","position":["vue[13]"]},{"filename":"vue多页面webpack配置","detail":"<p>1、webpack.base.config中配置多个入口文件</p><p>2、index.js文件中的build选项下，配置以该入口文件所产生的依赖的注入位置（html文件）</p><p>3、在webpack.dev.config和webpack.prod.config中的plugins选项中配置new HtmlWebpackPlugin，两个文件所需要的配置项不同，所以分开配置，以两个页面为例具体如下方黑色区域。</p><p>4、创建html模板、入口js文件、入口vue文件</p><div style=\"color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Consolas, &quot;Courier New&quot;, monospace; line-height: 19px; white-space: pre;\"><div></div><div>    dev：</div><div><span style=\"color: #569cd6;\">    new</span> <span style=\"color: #4ec9b0;\">HtmlWebpackPlugin</span>({</div><div>      <span style=\"color: #9cdcfe;\">filename:</span> <span style=\"color: #ce9178;\">'index.html'</span>,// 产生的html文件名</div><div>      <span style=\"color: #9cdcfe;\">template:</span> <span style=\"color: #ce9178;\">'index.html'</span>,// 需要用到的模板</div><div>      <span style=\"color: #9cdcfe;\">inject:</span> <span style=\"color: #569cd6;\">true</span>,// 注入到body末尾</div><div>      <span style=\"color: #9cdcfe;\">chunks:</span> [<span style=\"color: #ce9178;\">'app'</span>]// 此处在单页面的情况下是不需要的，多页面需要增加此项，表示在此html中只注入app为入口的依赖，否则会注入全部依赖</div><div>    }),</div><div>    <span style=\"color: #569cd6;\">new</span> <span style=\"color: #4ec9b0;\">HtmlWebpackPlugin</span>({// 配置第二个页面</div><div>      <span style=\"color: #9cdcfe;\">filename:</span> <span style=\"color: #ce9178;\">'download.html'</span>,</div><div>      <span style=\"color: #9cdcfe;\">template:</span> <span style=\"color: #ce9178;\">'src/pages/download.html'</span>,</div><div>      <span style=\"color: #9cdcfe;\">inject:</span> <span style=\"color: #569cd6;\">true</span>,</div><div>      <span style=\"color: #9cdcfe;\">chunks:</span> [<span style=\"color: #ce9178;\">'download'</span>]</div><div>    })</div><div><br></div><div>    prod：</div><div><div style=\"line-height: 19px;\"><div></div><div>    <span style=\"color: #569cd6;\">new</span> <span style=\"color: #4ec9b0;\">HtmlWebpackPlugin</span>({</div><div>      <span style=\"color: #9cdcfe;\">filename:</span> <span style=\"color: #9cdcfe;\">config</span>.<span style=\"color: #9cdcfe;\">build</span>.<span style=\"color: #9cdcfe;\">index</span>,</div><div>      <span style=\"color: #9cdcfe;\">template:</span> <span style=\"color: #ce9178;\">'index.html'</span>,</div><div>      <span style=\"color: #9cdcfe;\">inject:</span> <span style=\"color: #569cd6;\">true</span>,</div><div>      <span style=\"color: #9cdcfe;\">minify:</span> {</div><div>        <span style=\"color: #9cdcfe;\">removeComments:</span> <span style=\"color: #569cd6;\">true</span>,</div><div>        <span style=\"color: #9cdcfe;\">collapseWhitespace:</span> <span style=\"color: #569cd6;\">true</span>,</div><div>        <span style=\"color: #9cdcfe;\">removeAttributeQuotes:</span> <span style=\"color: #569cd6;\">true</span></div><div>        <span style=\"color: #608b4e;\">// more options:</span></div><div>        <span style=\"color: #608b4e;\">// https://github.com/kangax/html-minifier#options-quick-reference</span></div><div>      },</div><div>      <span style=\"color: #608b4e;\">// necessary to consistently work with multiple chunks via CommonsChunkPlugin</span></div><div>      <span style=\"color: #9cdcfe;\">chunksSortMode:</span> <span style=\"color: #ce9178;\">'dependency'</span>,</div><div>      <span style=\"color: #9cdcfe;\">chunks:</span> [<span style=\"color: #ce9178;\">'manifest'</span>, <span style=\"color: #ce9178;\">'vendor'</span>, <span style=\"color: #ce9178;\">'app'</span>]</div><div>    }),</div><div>    <span style=\"color: #569cd6;\">new</span> <span style=\"color: #4ec9b0;\">HtmlWebpackPlugin</span>({</div><div>      <span style=\"color: #9cdcfe;\">filename:</span> <span style=\"color: #9cdcfe;\">config</span>.<span style=\"color: #9cdcfe;\">build</span>.<span style=\"color: #9cdcfe;\">download</span>,</div><div>      <span style=\"color: #9cdcfe;\">template:</span> <span style=\"color: #ce9178;\">'download.html'</span>,</div><div>      <span style=\"color: #9cdcfe;\">inject:</span> <span style=\"color: #569cd6;\">true</span>,</div><div>      <span style=\"color: #9cdcfe;\">minify:</span> {</div><div>        <span style=\"color: #9cdcfe;\">removeComments:</span> <span style=\"color: #569cd6;\">true</span>,</div><div>        <span style=\"color: #9cdcfe;\">collapseWhitespace:</span> <span style=\"color: #569cd6;\">true</span>,</div><div>        <span style=\"color: #9cdcfe;\">removeAttributeQuotes:</span> <span style=\"color: #569cd6;\">true</span></div><div>      },</div><div>      <span style=\"color: #9cdcfe;\">chunksSortMode:</span> <span style=\"color: #ce9178;\">'dependency'</span>,</div><div>      <span style=\"color: #9cdcfe;\">chunks:</span> [<span style=\"color: #ce9178;\">'manifest'</span>, <span style=\"color: #ce9178;\">'vendor'</span>, <span style=\"color: #ce9178;\">'download'</span>]</div><div>    }),</div></div></div></div>","ctime":"16:13","cdate":"2018/06/25","fileId":"f1529914391715","type":"file","fileFather":"vue","position":["vue[14]"]},{"filename":"图片命名方式","detail":"1、webpack打包后，一个vue工程的所有图片都会被拷贝至同一个文件夹，所以需要图片名称不相同才会不冲突，否则只能留有一个相同名字的图片。<div><p><br></p></div>","ctime":"16:43","cdate":"2018/06/29","fileId":"f1530261836324","type":"file","fileFather":"vue","position":["vue[15]"]},{"filename":"vue-router默认跳转","detail":"<div style=\"color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Consolas, &quot;Courier New&quot;, monospace; line-height: 19px; white-space: pre;\"><div><span style=\"color: #dcdcaa;\">   <p><span style=\"font-size: 1.4rem; text-indent: 2em;\">   judgeUrl</span><span style=\"color: rgb(212, 212, 212); font-size: 1.4rem; text-indent: 2em;\">() {</span><br></p></span></div><div>      <span style=\"color: #569cd6;\">let</span> <span style=\"color: #9cdcfe;\">currentUrl</span> = <span style=\"color: #9cdcfe;\">location</span>.<span style=\"color: #9cdcfe;\">href</span>;</div><div>      <span style=\"color: #608b4e;\">// 如果没有指定路由位置，则默认跳转至主页</span></div><div>      <span style=\"color: #c586c0;\">if</span> (<span style=\"color: #569cd6;\">this</span>.<span style=\"color: #dcdcaa;\">redirectPage</span>(<span style=\"color: #9cdcfe;\">currentUrl</span>) === <span style=\"color: #ce9178;\">\"/home\"</span>) {</div><div>        <span style=\"color: #569cd6;\">this</span>.<span style=\"color: #9cdcfe;\">$router</span>.<span style=\"color: #dcdcaa;\">push</span>(<span style=\"color: #ce9178;\">\"/home\"</span>);</div><div>        <span style=\"color: #c586c0;\">return</span>;</div><div>      }</div><div>    },</div><div>    <span style=\"color: #dcdcaa;\">redirectPage</span>(<span style=\"color: #9cdcfe;\">url</span>) {</div><div>      <span style=\"color: #608b4e;\">// url没有#以及没有哈希值时都返回home</span></div><div>      <span style=\"color: #c586c0;\">if</span> (!<span style=\"color: #9cdcfe;\">url</span>.<span style=\"color: #dcdcaa;\">includes</span>(<span style=\"color: #ce9178;\">\"#\"</span>)) {</div><div>        <span style=\"color: #c586c0;\">return</span> <span style=\"color: #ce9178;\">\"/home\"</span>;</div><div>      } <span style=\"color: #c586c0;\">else</span> {</div><div>        <span style=\"color: #569cd6;\">let</span> <span style=\"color: #9cdcfe;\">hash</span> = <span style=\"color: #9cdcfe;\">url</span>.<span style=\"color: #dcdcaa;\">split</span>(<span style=\"color: #ce9178;\">\"#\"</span>)[<span style=\"color: #b5cea8;\">1</span>].<span style=\"color: #dcdcaa;\">replace</span>(<span style=\"color: #ce9178;\">\"/\"</span>, <span style=\"color: #ce9178;\">\"\"</span>);</div><div>        <span style=\"color: #c586c0;\">if</span> (<span style=\"color: #9cdcfe;\">hash</span> === <span style=\"color: #ce9178;\">\"\"</span> || <span style=\"color: #9cdcfe;\">hash</span> === <span style=\"color: #ce9178;\">\"home\"</span>) {</div><div>          <span style=\"color: #c586c0;\">return</span> <span style=\"color: #ce9178;\">\"/home\"</span>;</div><div>        }</div><div>      }</div><div>    }</div><div><br></div><div>// 在APP.vue钩子函数中执行judgeUrl方法,即可</div></div>","ctime":"19:36","cdate":"2018/07/02","fileId":"f1530531379661","type":"file","fileFather":"vue","position":["vue[16]"]},{"filename":"vue加载进度条","detail":"<p></p><div><span style=\"font-size: 1.4rem; text-indent: 2em;\">官网:</span><span style=\"text-indent: 2em;\">http://ricostacruz.com/nprogress/</span></div><div><span style=\"font-size: 1.4rem; text-indent: 2em;\"><br></span></div><div><span style=\"font-size: 1.4rem; text-indent: 2em;\">import App from './App'</span><br></div><div>//&nbsp; ************************************************NProgress 模块<br></div><div>import VueRouter from 'vue-router'</div><div>//引入nprogress</div><div>import NProgress from 'nprogress'</div><div>import 'nprogress/nprogress.css' //这个样式必须引入</div><div><br></div><div>Vue.use(VueRouter)</div><div><br></div><div>// 简单配置</div><div>NProgress.inc(0.2)</div><div>NProgress.configure({ easing: 'ease', speed: 500, showSpinner: false })</div><div><br></div><div><br></div><div>router.beforeEach((to,from,next) =&gt; {</div><div>&nbsp; NProgress.start()</div><div>&nbsp; next()</div><div>})</div><div><br></div><div>router.afterEach(() =&gt; {</div><div>&nbsp; NProgress.done()</div><div>})</div><div><br></div><div><br></div><div>new Vue({</div><div>&nbsp; el: '#app',</div><div>&nbsp; router,</div><div>&nbsp; render: h =&gt; h(App)</div><div>})</div><p></p>","ctime":"16:55","cdate":"2018/07/10","fileId":"f1531212912251","type":"file","fileFather":"vue","position":["vue[17]"],"mtime":"16:57","mdate":"2018/07/10"}],"gulp/webpack/Babel":[{"filename":"publicPath配置","detail":"<div>webpack中的path是当我们build的时候，输出项目打包文件的位置。</div><div><br></div><div>webpack中的publicPath是我们打算放到web服务器下的目录，如果我们要放到网站的根目录下，那么就无需设置。如果要放到站点的其它路径，就可以通过设置publicPath来实现。</div><div><br></div><div>这样当运行的时候，请求的其它js, css等资源，就会添加上这个路径。</div>","ctime":"10:34","cdate":"2018/07/03","fileId":"f1530585252199","type":"file","fileFather":"gulp/webpack/Babel","position":["gulp/webpack/Babel[0]"]},{"filename":"gulp高级技巧","detail":"Vinyl 文件对象：https://csspod.com/advanced-tips-for-using-gulp-js/&nbsp;<div>gulp开发基础流程：https://segmentfault.com/a/1190000004394726?utm_source=tuicool&amp;utm_medium=referral</div>","ctime":"17:11","cdate":"2018/07/04","fileId":"f1530695479908","type":"file","fileFather":"gulp/webpack/Babel","position":["gulp/webpack/Babel[1]"]},{"filename":"browserify的基本使用","detail":"https://www.ibm.com/developerworks/cn/web/1501_chengfu_browserify/","ctime":"18:51","cdate":"2018/07/04","fileId":"f1530701499554","type":"file","fileFather":"gulp/webpack/Babel","position":["gulp/webpack/Babel[2]"]},{"filename":"gulp 同步 + 异步优化","detail":"&nbsp;// gulp-sequence插件<div>https://blog.csdn.net/mrhaoxiaojun/article/details/51907132<br></div><div><br></div><div><div>国内的 Teambition 团队开源了 gulp-sequence ，以及国外开发者开发的 run-sequence 均能很好地解决这个问题。它们提供了类似的调用方式，下面的代码演示如何使用 run-sequence 按顺序地运行多个或多组 Gulp 任务：</div><div><br></div><div>var runSequence = require('run-sequence');</div><div>gulp.task('default', function(callback) {</div><div>&nbsp; &nbsp; runSequence('clean',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; ['less', 'scripts'],</div><div>&nbsp; &nbsp; &nbsp; &nbsp; 'watch',</div><div>&nbsp; &nbsp; &nbsp; &nbsp; callback);</div><div>});</div><div>&nbsp;</div><div>在上述代码中，clean 先于所有其他任务运行，在 clean 完成后，less 与 scripts 同时运行；在 less 与 scripts 都运行完成之后，watch 最后运行。并且，在 watch 运行完毕后，会调用 callback，以通知 Gulp 引擎。</div></div>","ctime":"11:21","cdate":"2018/07/05","fileId":"f1530760913265","type":"file","fileFather":"gulp/webpack/Babel","position":["gulp/webpack/Babel[3]"]},{"filename":"gulp插件","detail":"<p>1、stylus： gulp-stylus</p><div>2、图片：gulp-imagemin&nbsp; ：https://www.npmjs.com/package/gulp-imagemin</div><div><div>这个插件可以用来压缩PNG, JPEG, GIF和SVG图片</div><div>有很多定制选项</div><div>可以引入更多第三方优化插件，例如pngquant (见下面例子)</div><div>可以处理多种图片格式</div></div><div>但是压缩率较小</div><div><div>gulp.task('imagemin', function () {</div><div>&nbsp; &nbsp; return gulp.src('src/*')</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .pipe(imagemin({</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; progressive: true,</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; use: [pngquant()]</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }))</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .pipe(gulp.dest('imagemin-dist'));</div><div>});</div></div><div><p>3、gulp-imagemin ：https://www.npmjs.com/package/gulp-smushit</p><p>Smushit是Yahoo开发的一款用来优化PNG和JPG的插件，它的原理是移除图片文件中不必要的数据。<br></p><p>压缩率高，图片不降低质量，但是只能处理jpg和png</p><p>gulp.task('smushit', function () {</p><p>&nbsp; &nbsp; return gulp.src('src/*')</p><p>&nbsp; &nbsp; &nbsp; &nbsp; .pipe(smushit({</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; verbose: true</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }))</p><p>&nbsp; &nbsp; &nbsp; &nbsp; .pipe(gulp.dest('smushit-dist'));</p><p>});</p><p>4、自动刷新浏览器 gulp+browsersync</p><p>https://browsersync.io/docs/gulp<br></p></div><p></p>","ctime":"13:56","cdate":"2018/07/05","fileId":"f1530770214240","type":"file","fileFather":"gulp/webpack/Babel","position":["gulp/webpack/Babel[4]"],"mtime":"16:55","mdate":"2018/07/05"}],"未分组":[{"filename":"官网用来干嘛","detail":"<p>对于电商来说，官网是要做业务功能的。</p><p>对于实体企业来说，官网主要用来展示产品，和展示企业，同时还可以加入电商的功能。</p><p>而对于类微信、支付宝应用，官网的作用又是什么呢？<span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\">去官网的人群包括哪些呢？</span></p><p>1、潜在用户通过官网了解应用和业务</p><p>当潜在用户对应用感兴趣的时候，一部分人会直接安装下来试用。还会有一部分人去搜索名字，进而进入官网或者其他网络渠道了解应用。</p><p><br></p><p>对于租我么来说：</p><p>企业自己做相关关键词，在搜索技能出售，技能需求内容时，增加公司的曝光；</p><p>2、官网要展示的信息：</p><p>用户出租故事和租人故事</p><p>用户信息头像、名字、服务技能、么么号、出租故事、出租故事点开次数和阅读信息、个人视频介绍（点击安装app）</p><p>平台安全保障</p><p>租我么团队展示，（来自CEO的提示）</p><p><br></p><p>3、租我么有很强的地域性质，所以线下的活动非常有助于维护老用户和拉新。而官网需要成为活动发布平台。</p><p>4、租之最：</p><p>最远出租、最贵出租、</p>","mtime":"13:10","mdate":"2018/03/19","fileId":"f1510808277393","type":"file","fileFather":"未分组","position":["未分组[0]"],"stared":"no"},{"filename":"永久重定向","detail":"<p></p><p>服务器给浏览器响应一个301永久重定向响应，这样浏览器就会访问“http://www.facebook.com/” 而非“http://facebook.com/”。</p><p>为什么服务器一定要重定向而不是直接发送用户想看的网页内容呢？其中一个原因跟搜索引擎排名有关。如果一个页面有两个地址，搜索引擎会认为它们是两个网站，结果造成每个搜索链接都减少从而降低排名。而搜索引擎知道301永久重定向是什么意思，这样就会把访问带www的和不带www的地址归到同一个网站排名下。</p><p>还有就是用不同的地址会造成缓存友好性变差，当一个页面有好几个名字时，它可能会在缓存里出现好几次。</p><p></p>","mtime":"20:50","mdate":"2018/01/13","fileId":"f1510817456220","type":"file","fileFather":"未分组","position":["未分组[1]"],"stared":"no"},{"filename":"ASCII 编码的xss","detail":"1、window['\\x65\\x76\\x61\\x6c']('\\x61\\x6c\\x65\\x72\\x74\\x28\\x27\\x78\\x73\\x73\\x27\\x29') =>window.eveal('alert('xss')')","mtime":"21:59","mdate":"2017/10/16","fileId":"f1510840746105","type":"file","fileFather":"未分组","position":["未分组[2]"]},{"filename":"http 流程","detail":"<p>https://note.youdao.com/web/#/file/1438837157120725/note/WEB6255f8802fdfa95fb04b7e0f0970fbbf/<br></p>","mtime":"13:39","mdate":"2018/06/05","fileId":"f1510844210977","type":"file","fileFather":"未分组","position":["未分组[3]"],"stared":"no"},{"filename":"领导的重要性","detail":"<p class=\"UCUNNIC UCNightMode_transparentBkg UCNightMode_changeBorder UCNightMode_ColorWhite UCUNNIC_Done\"><!--写笔记-->\n\t\t\t\t\t\t\t</p><p class=\"UCUNNIC UCNightMode_transparentBkg UCNightMode_changeBorder UCNightMode_ColorWhite UCUNNIC_Done\">ceo最重要的任务就是定方向和把握方向，方向对了其他才有机会，判断经营策略，及时叫停相关操作。</p><p class=\"UCUNNIC UCNightMode_transparentBkg UCNightMode_changeBorder UCNightMode_ColorWhite UCUNNIC_Done\">对于企业来讲找方向的重要性要远远大于执行</p><p class=\"UCUNNIC UCNightMode_transparentBkg UCNightMode_changeBorder UCNightMode_ColorWhite UCUNNIC_Done\">产品定位最关键，定位不能笼统不能模糊，定位需要清晰具体，才能指导我们的行动。</p>\n\t\t\t\t\t\t<p class=\"UCUNNIC UCNightMode_transparentBkg UCNightMode_changeBorder UCNightMode_ColorWhite UCUNNIC_Done\"></p>","mtime":"03:51","mdate":"2017/11/20","fileId":"f1510864051458","type":"file","fileFather":"未分组","position":["未分组[4]"]},{"filename":"伯凡商业模式","detail":"<p>商业模式分三点：</p><p>1、独特的客户价值主张</p><p>案例：单个作坊洗衣店和大范围收衣店（综合家政服务商）</p><p>2、独享的资源和能力</p><p>案例：利乐包装公司两折给初创期蒙牛伊利卖杀菌设备，但是要求对方未来15年都必须买利乐的包材</p><p>3、设计良好的盈利模式</p><p>有了好产品、好的解决方案还不够，必须要有独特的收钱模式。案例：微软操作系统和谷歌操作系统；吉列公司“刀片模式”；打印机的“耗材模式”</p>","ctime":"18:42","cdate":"2017/11/18","fileId":"f1511001730330","type":"file","fileFather":"未分组","position":["未分组[5]"]},{"filename":"经营理念","detail":"<p>自己源于生活的思考：</p><p>1、消除顾客的使用障碍</p><p>案例：卖饼的食品袋随便放置，导致外面沾有油污，顾客买来后不能放心袋子外面是干净的；</p><p>案例：很多人光顾一家食品店，都会有一种连续光顾的心里障碍。这种障碍一方面源于所购商品的单一（这家伙又买这个），另一方面源于和店主的见面（这家伙又来了）。</p><p>一个食品小店，一个顾客喜欢买炸鸡球，但是没买过其他产品，店主如果能在他买炸鸡球的时候商量着送一个其他产品，顾客如果觉得好吃，顾客就多了一个选项，用来突破障碍一。障碍二通过语言、表情、姿势来破除。</p><p>破除障碍后能增加顾客消费频次（即使不是百分百破除）。</p>","ctime":"19:04","cdate":"2017/11/18","fileId":"f1511003081845","type":"file","fileFather":"未分组","position":["未分组[6]"]},{"filename":"对或错","detail":"<p>做一个应用或产品，如何判断理念和方法是正确的？或者如何判断一个应用做的怎么样？或者如何做好一个应用？</p><p>（相关数据：用户满意度和用户增长、月活、留存，有粘性的活跃用户数量）</p><p><br></p><p>两点：产品的定位和方向；第二就是策略；那如何判断这两点是不是正确呢？</p><p>完全靠用户数据来判断吗？</p><p>对于新应用而言，短期的少量的用户数据好坏反应不出产品的定位和方向是否正确，（短期指什么时期？少量是多少？这两个问题和有经验的人探讨）。</p><p>那如何去定位呢？如果是开创者，可以根据自己想做的事情去定位，如果有点模糊的话（比如曾经的36kr，逻辑思维）就要先搞清楚自己想做的事情。那在现在这个竞争激烈的时代，我倾向于经典的定位理论，就是根据竞争对手来定位，找出和竞争对手不一样的点，然后依据这个点去做产品。成为这个点的开创者和第一名。</p><p>有人说要根据市场需求来定位。这个为什么不对，还是竞争的问题，能满足这个需求的公司不只一家，那用户为什么要选择你的产品，除去随机因素，在用户都接触过不同产品后总有理由选择一家，或者用过一个产品之后觉得很好就懒得去装第二个了（如果自己是这第二个，那就要考虑给用户一个什么理由来让他装自己的应用），这也是我支持根据竞争对手做定位的一个原因。</p><p>如果你是市场上的老大，或者开创者，那根据市场需求来定位是可以的，如果不是就需要更改定位标准。比如最近的共享单车，大家都把自己定位成租赁单车提供商，做一模一样的模式，然后比拼价格、车型、和资本。那对于后来者肯定竞争不过前两个大玩家。所以应该去找单车租赁不一样的玩儿法，否则就别做，倒不如把精力放在其他改善国计民生的领域做开创者，这样自己才有更大的机会。</p><p><br></p><p>那方向和定位没问题以后，就是经营策略问题了。如何把自己的理念传递给目标用户，如何让用户安装应用，如何让用户持续使用应用等等。</p><p>这些问题都能反映在用户数据里。所以要根据用户运营数据来做判断。</p><p><br></p><p><br></p><p>前面说的如果有竞争，如何让用户选择你的服务。参考河狸家的商业模式和严把服务质量的经营策略和汽车之家的精细研究用户行为的策略</p>","ctime":"03:29","cdate":"2017/11/20","fileId":"f1511119779509","type":"file","fileFather":"未分组","position":["未分组[7]"],"mtime":"12:59","mdate":"2018/03/19","stared":"no"},{"filename":"判断活动文案","detail":"<p>就拿光棍节的活动文案来说，如何评价做的好坏。</p><p>最终标准就是有没有达到活跃老用户和拉新这两点，这个靠用户运营数据来判断。</p><p>从活动宣传页面的角度来看，有两点用来参考：</p><p>1、就是页面打开数量</p><p>通过多渠道的发布让更多人接触到这次活动，靠标题和渠道去让更多人点进来</p><p>2、就是页面浏览时间</p><p>人们打开页面后有没有看完，有没有get到关键信息。</p><p>可以在window.onload的时候计时，在window.onclose的时候停止计时并发送到服务器分析。</p><p>可以在window.onscroll的时候判断页面滚动到哪儿了，在什么时间滚动到了什么位置，需要记录下来，时间为x轴卷动高度为Y轴创建浏览曲线。</p><p>如果在一个合理的时间里滚动到底部，说明是看完了活动介绍，否则就需要改进活动文案。</p>","ctime":"15:53","cdate":"2017/11/20","fileId":"f1511164431228","type":"file","fileFather":"未分组","position":["未分组[8]"],"mtime":"02:27","mdate":"2017/11/21","stared":"no"},{"filename":"跨思维","detail":"<p>我自己称自己是具有很强用户思维和产品思维的前端工程师。</p><p>在我之前工作的生物行业，有太多的人只关注技术，认为我来工作就是来做实验的，有什么实验任务交给我我来做，然后只交实验结果就行了，但是为什么要做这个实验，实验结果拿来做什么很多人都不管。</p><p>为什么说这种思维不对呢，因为如果实验的某一个细节出了问题，造成了实验的瑕疵，很多人就要重做，但是这个瑕疵可能并不影响结果，导致浪费了更多时间和材料。</p><p>所以如果站在大的框架上去做细节，就能避免很多重复实验。</p><p>而在前端开发这块儿，我认为也是同理。不能只关注技术，需要对产品有整体的把握，需要对用户心里有更多的理解。</p><p>所以我认为干技术得同时关注产品和用户是很重要的。</p><p>那如何站在用户的角度来考虑产品呢，针对我们前端，我觉得三点：</p><p>首先用户的需求（核心业务的功能是必须的，然后用户需要其他什么样的功能）；</p><p>第二操作体验（每个功能在具体的操作上需要很顺畅，尤其避免反人类的设计）；</p><p>第三行为分析（用户在一个页面都干了���什么，这个关系到页面内容有没有达到目的）；</p><p>有的因素直接关系到产品的生死，大家会容易注意的到，但有很多重要的隐性因素，想要避免是需要有洞察力的</p>","ctime":"03:55","cdate":"2017/11/21","fileId":"f1511207703803","type":"file","fileFather":"未分组","position":["未分组[9]"],"mtime":"18:54","mdate":"2018/01/15"},{"filename":"平台策略","detail":"<p>平台型应用应该使用什么策略的思考：</p><p>（借鉴了些airbnb前产品总监的观点）</p><p>根据连接范围分三类：局域网络平台业务、跨城市网络平台业务、全球网络平台业务</p><p>1、外卖型平台</p><p>对于用户来说，能产生交易的区域只能在3公里之内</p><p>2、打车型平台</p><p>滴滴：对于快车，自动匹配最近的车辆产生交易，限于乘客端附近。对于顺丰车，比如春节跨城市顺风车，交易距离就会扩大到同城。</p><p>Uber：类似滴滴，但是他还具有一定的全球网络平台效果，比如乘客去其他国家旅行也可以用Uber。</p><p>3、airbnb类平台</p><p>全球网络平台，地球上任何地区的人都可以在平台上出租房屋，其他人都能看到并到当地旅行租住。</p><p>租我么多数交易属于同城网络，同时还兼具跨城市和全球网络业务可能性。</p><p>所以，主要策略需要以城市为单位来增加优质服务供应量，同时需要改造app，使其具有跨城市和全球属性。</p><p><br></p><p>根据平台服务方的服务内容，分为同质化型服务平台和差异化型服务平台，比如Uber就是相对同质的打车服务，airbnb就是相对差异的房屋服务。</p><p>Uber主要拼价格和附加价值。</p><p>airbnb主要拼降低需求方筛选难度，比如限制选项数量、提供过滤搜索功能、建立用户档案用于优化搜索结果</p><p><br></p><p>如何促使用户双方都能持续使用平台进行交易而不是私下建立联系或其他（这点对于河狸家累平台至关重要）：</p><p>原则是提供足够的双方信任度和平台便利度。</p><p>信任：身份认证保安全、租用者评论、提供保险防万一。</p><p>便利：安全的支付、方便的双方沟通。</p><p>经过几次交易之后，买卖双方都能放心的继续在平台进行随机交易，而不是只选固定信任的人，平台双边激励目标就达到了。</p><p>Uber和airbnb类平台都不太需要进行双方私下交易。而河狸家类上门服务就非常容易产生绕过平台的交易，这类平台除了做好上述两点，还可以考虑改变收入模式，放弃交易提成，改为线索付费。</p><p><br></p><p>租我么是差异化服务，不太需要考虑类似绕过平台的问题，但是需要考虑情侣在租我么的使用场景，拓宽用户群体范围，不仅限于单身狗，比如多人租多人。</p><p><br></p><p><span style=\"color: rgb(38, 38, 38); font-family: &quot;PingFang SC&quot;, &quot;Lantinghei SC&quot;, &quot;Droid Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Microsoft YaHei&quot;, &quot;\\\\5FAE软雅黑&quot;, STHeitiSC-Light, simsun, &quot;\\\\5B8B体&quot;, &quot;WenQuanYi Zen Hei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 18px; text-align: justify; text-indent: 0px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\">“Stripe提供的支付技术、Checker提供的背景审查技术、Lob提供的地址验证技术将会让创办新的平台型公司变得越来越容易。”</span><br></p><p><br></p>","ctime":"03:37","cdate":"2017/11/23","fileId":"f1511379470086","type":"file","fileFather":"未分组","position":["未分组[10]"],"mtime":"20:09","mdate":"2017/12/22"},{"filename":"要开会吗？","detail":"<p>一旦有顾客来找公司了，那就意味着公司的产品和服务一定有什么问题了;一旦公司会议多，一定是组织出问题了。 &nbsp;—— 杰夫.贝佐斯</p><p><br></p><p>如果公司有很多问题还不多开点会，那就更有问题了。具体如何开会要根据企业不同阶段来做改变，初创期、稳定期需要不同的策略——jemory</p><p><br></p><p>与其在如何开好会上大做文章，还不如调整改善组织功能，把会议保持在最低限度——宁向东</p><p><br></p><p><br></p><p><br></p>","ctime":"13:51","cdate":"2017/11/26","fileId":"f1511675467128","type":"file","fileFather":"未分组","position":["未分组[11]"],"mtime":"19:04","mdate":"2017/12/28"},{"filename":"经济增长的动力","detail":"<p>以前国家政策是刺激消费来“提高经济”，现在的政府已经意识到了错误，所以现在是供给侧改革来促使经济增长。</p><p>经济是什么？经济就是人们的生活水平。经济增长就是人们生活水平提高。</p><p>那消费能提高生活水平吗？看上去好像可以，买了好用的可不生活水平就提高了。</p><p>但是如何提高生活水平这个问题的出发点不能是消费，而应该是生产。</p><p>消费提高生活水平只是假象，最根本的方面是生产，生产能改善生活水平的东西（吃的、用的、玩儿的）。</p><p>但是有人说就算生产出来了人们买不起，不也是无法提高生活水平吗？这其实是不对的。因为人们的本性就是想要过更好的生活，如果产品能做到让人们更好的生活，人们一定会买。开始的时候价格可能是一部分有钱人才能接受的，而随着生产效率的提高，成本不断下降，价格就会降低，更多的人就能买到产品。</p><p>所以提高生活水平的根本出发点是：</p><p>1、创新，创造出更有价值的产品和服务</p><p>2、工匠精神，追求卓越，使产品质量更好。</p><p>3、再创新，工艺流程创新，提高生产率，降低产品成本，进而降低价格。</p><p>———jemory</p><p><br></p><p>所以总理到处都在讲：<span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\">供给侧改革、工匠精神、中国制造迈向中高端、鼓励双创，培养经济发展新动能</span></p>","ctime":"17:32","cdate":"2017/11/26","fileId":"f1511688769834","type":"file","fileFather":"未分组","position":["未分组[12]"],"mtime":"19:46","mdate":"2017/12/22"},{"filename":"顾客分析","detail":"<p>最近比较喜欢吃一家叫做“比哥炸鸡”的小店做的“盐酥鸡”，某日问了下店主外卖顾客和到店顾客比例是多少，老板没分析过这事儿，那对于一家炸鸡小吃店来说如何进行顾客分析的思考：</p><p>首先区分新顾客和老顾客。</p><p>如果全凭老板和店员的记忆力来判断是最不靠谱的，而且也没法记录和分析。</p><p>最常见的会员卡是一种区分方式，但是仍然有很多老顾客不办理会员卡，所以也不能拿来做顾客分析，会员卡的作用是要靠积分和优惠绑定老顾客，积累独享的顾客资源，提高竞争力。</p><p>要想准确的识别新老顾客，还得需要一些新科技，比如人脸识别和支付记录。</p><p>那对于新顾客要做什么，对于老顾客要做什么？</p><p>对于新顾客：</p><p>1、要了解他是通过什么渠道知晓的小店地址。可能是路过的时候发现的（住在附近或者偶尔路过）；可能是通过类口碑网；可能是通过外卖平台。</p><p>通过分析数据，得出三个渠道的获客比例，通过比例指导运营方式。那优良的比例是多少呢？需要把比例分析成线下和线上，线上所影响的范围一定比线下大，所以比例至少是一半一半（还需要咨询相关人士）。</p><p>不同的渠道需要不同的推荐方式，引出三个问题：</p><p>如何提高聊天社交的方式推荐率？</p><p>如何提高类口碑网推荐率？</p><p>如何提高外卖平台推荐率？</p><p>后两个需要去研究网站的设定和政策，暂时不分析。那第一个问题有几个场景：</p><p>打招呼（包括线上聊天），“买的什么吃啊？”“买的炸鸡”“味道怎么样？”“还不错很好吃”“哪儿买的啊？远吗？”“很近，就在炸鸡街的札记炸鸡店”</p><p>朋友亲人考虑吃什么，“今天吃什么？”“我之前吃过札记炸鸡店的炸鸡，味道很好，吃吗？”“好，去试试”</p><p>旁听，上述两个场景的旁观者耳濡目染被推荐了。</p><p><span style=\"font-size: 1.4rem; text-indent: 2em; -webkit-text-size-adjust: 100%;\">推荐率有一个跟复购率不一样的点，</span>想要提高口头推荐率“好吃实惠”是最基础的。除此之外还需要什么呢？优良的包装；其他有待思考....</p><p>要了解老顾客：</p><p>1、复购频率（提高频率）</p><p>提高复购率的根本是消除顾客食用障碍和购买心里障碍（详见“经营理念”那篇文）</p><p>3、购买量（有没有提高购买量）</p><p>购买量的增大，说明带来了新顾客<br></p><p>2、购买品类（提高购买品类数量）</p><p>如果顾客没主动尝试更多品类，那就需要主动和顾客商定进行小量免费的尝鲜。</p><p><br></p><p>最后，额外的预测：</p><p>未来，帮线下店获取用户数据和分析数据的技术和软硬件会很有价值。</p><p><br></p>","ctime":"20:11","cdate":"2017/11/30","fileId":"f1512043877507","type":"file","fileFather":"未分组","position":["未分组[13]"],"mtime":"20:18","mdate":"2017/11/30"},{"filename":"如何更幸福","detail":"<p>现在社会上逐渐形成一种思潮，要搞教育改革。人们做各种不同的尝试，建立起了各种不同形式的新的教育机构，由于建立时间较短还需要更长时间才能验证哪种教育方式更优。</p><p>那为什么人们需要更好的教育方式呢？</p><p>根本上来说，原因是人们追求更幸福的生活。想要达到这个目的需要两个方面都做好，首先是社会整体的发展水平，然后是个人的价值水平。</p><p>不可否认的是，更好的生活方式是由“能人”们创造的。他们拥有更好的思维方式、更充分的知识储备、更强的学习能力、更顺畅的合作能力，我暂时统称这些人为“能人”。</p><p>显然，社会上的能人越多，就能产生更多的创造，就能产生更好的生活方式，人们的生活就更幸福。这对于每个人都是有利的。</p><p>作为个人，我们希望社会上能有更多的能人，同时也希望自己可以成为能人；</p><p>作为社会管理者（政府部门），需要研究制定良好的教育方式，来实现人们的愿望，培养出更多能人。</p><p>目前来看，中国政府正在积极推进的教育系统改革，改革的终点在哪儿，改革的成果如何，需要多长时间，我们都不知道。</p><p>所以作为个人，就需要研究确定在现有的社会情况和教育方式中，找到自己需要做的事情，来为自己和孩子谋划未来的发展方向，使自己和孩子成为能人是我们自己能够掌控的。</p><p>那面对自己的教育和孩子的教育，人们应该做什么呢？</p>","ctime":"23:18","cdate":"2017/12/01","fileId":"f1512141526121","type":"file","fileFather":"未分组","position":["未分组[14]"],"mtime":"18:37","mdate":"2018/01/15"},{"filename":"个人价值是什么，职位意义是什么","detail":"<p>1、本质上来说价值来源于制造和创造。在现在的社会，个人的价值更多源自于与他人的协作，只有更多人相互协作才能产生更大的价值，往小了说建设自己的家庭，往大了说建设国家，再大点建设地球。所以，在这个把地球建设的越来越美好的过程中，人们的价值就得到了体现。</p><p>2、就我自己而言，我的目标是称为一名前端开发工程师。那前端开发工程师的价值是什么呢？如果我就职于一家公司，那就不得不说组织的价值，比如说租我么，我们定位是国民经纪人，是一个连接平台，人们通过我们平台能给生活增加便利。</p><p>企业和用户之间需要有联系，可以有线下和线上两种途径，线上途径就是手机应用和网站，那我的价值就是网站的设计者、制作者和维护者，我需要保证用户能通过网站得到他们想要的信息，也需要保证企业组织能通过网站表达他们想要表达的信息，那这个就是我们前端工程师的价值。</p><p>3、上面说的是价值的来源，那说到这就又引出一个非常重要的话题就是，如何提升自己的价值，当然我自己总结的是一个通用的方式。我觉得三点：提升效率、提高质量、能够创新（详情移步提升价值那篇文章）</p>","ctime":"21:12","cdate":"2018/03/18","fileId":"f1521378725945","type":"file","fileFather":"未分组","position":["未分组[15]"],"mtime":"21:49","mdate":"2018/03/20","stared":"no"},{"filename":"如何评判网站做的好坏","detail":"<p>1、内容是用户需要的</p><p>2、有良好的功能、良好的操作体验、良好的兼容性</p><p>3、有快速的网页打开速度：更少的请求次数，更小的代码体积，使用CDN，做缓存；</p><p>4、有良好的网站搜索排名：合适的关键词和描述；语义化的html，使用alt和title属性；不带www的网址重定向；做外链；</p>","ctime":"15:32","cdate":"2018/03/22","fileId":"f1521703955182","type":"file","fileFather":"未分组","position":["未分组[16]"],"stared":"no","mtime":"09:59","mdate":"2018/03/28"},{"filename":"如何处理沟通障碍","detail":"<p>人们都有守护自己观点的本能，不要急于去证明对方是错的，只需证明自己是对的，不要急于当时就要扭转对方的思想，你的观点如果真的正确，就会在对方心里生长，直到对方改变自己的观点。（有时候需要这个进程快一点，就需要做一些其他加速工作）</p><p>“牛人，内心能同时持有两种相反的观点”</p><p>观点的对错更多取决于分析的角度，不同角度得到不同的结果，人们要做的是选一个适合自己情况的角度来进行判断。</p><p><br></p><p>人们经常会碰到有沟通障碍的人，当跟这些人谈话的时候，会非常艰难，典型代表：</p><p>1、认知错误，比如把“你如果怎么样做会更好”认为是批评，而不是建议</p><p>2、草率下判断，比如对方话还没讲完，还没听明白对方要表达什么意思就开始找理由反驳</p><p>3、急于给自己辩解，然后疯狂找理由，只顾自己辩解，不顾对方在说什么</p><p>如果不得不与这种人合作，那处理办法如下：</p><p>1、提出建议之前，需要明确的+足量的夸赞。这样能减弱对方胡搅蛮缠的思想。</p><p>2、如果对方找理由推脱，称自己“不可能做什么什么”的时候，质问对方“我有要求你做这件事情吗？”，并等对方给出答案，因为答案肯定是“否”，然后再继续自己的表达</p><p>3、如果碰到不顾一切为自己辩解的人，需要再次进行明确的、足量的夸赞</p><p><br></p>","ctime":"19:52","cdate":"2018/03/23","fileId":"f1521805931976","type":"file","fileFather":"未分组","position":["未分组[17]"],"mtime":"02:52","mdate":"2018/03/26"},{"filename":"主动介绍作品","detail":"<p>我做的东西其实挺好的，但对方就是没发现闪光点！</p><p>正确姿势是：</p><p>首先我们自己要对自己的产品有热情，自己要先重视这些闪光点，要有一种“乔布斯式”的介绍产品的情绪。</p><p>比如“哇哦！看看我做了个什么东西”“注意我点的这个位置，看！”等等类似的高昂情绪。</p><p>对方（面试官或投资人）如果能主动发现闪光点当然最好，但我们自己不能完全指望别人，关键还是要靠自己的主动介绍。“我来介绍一下这个作品吧”“我来跟你详细讲讲这个产品”。</p><p>那反过来，如果我们自己如果是面试官或投资人，那么应该主动的去要求对方来详细介绍一下他的作品，主动去发现细节中的价值。00000</p>","ctime":"21:49","cdate":"2018/04/06","fileId":"f1523022594461","type":"file","fileFather":"未分组","position":["未分组[18]"],"mtime":"15:35","mdate":"2018/06/07","stared":"no"}]}